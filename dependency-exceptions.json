[
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[Z\\[Z\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[B\\[B\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[C\\[C\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[S\\[S\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[I\\[I\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[J\\[J\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[D\\[DD\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[F\\[FF\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.internalArrayEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExternalResource\\.before\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TestWatcher\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/rules\\/TestWatcher\\;Lorg\\/junit\\/runner\\/Description\\;Lorg\\/junit\\/runners\\/model\\/Statement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TestWatcher\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.before\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.create\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.newFile\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.newFile\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.newFolder\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.newFolder\\:\\(\\[Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.validateFolderName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.newFolder\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.createTemporaryFolderIn\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.RunRules\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TestWatchman\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/rules\\/TestWatchman\\;Lorg\\/junit\\/runners\\/model\\/FrameworkMethod\\;Lorg\\/junit\\/runners\\/model\\/Statement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TestWatchman\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.Verifier\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/rules\\/Verifier\\;Lorg\\/junit\\/runners\\/model\\/Statement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.Verifier\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExpectedException\\.handleException\\:\\(Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.AssertionError"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExpectedException\\.failDueToMissingException\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExpectedException\\.access\\$000\\:\\(Lorg\\/junit\\/rules\\/ExpectedException\\;Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.AssertionError"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExpectedException\\.access\\$200\\:\\(Lorg\\/junit\\/rules\\/ExpectedException\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExpectedException\\$ExpectedExceptionStatement\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ErrorCollector\\$1\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.Verifier\\.verify\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.Timeout\\.createFailOnTimeoutStatement\\:\\(Lorg\\/junit\\/runners\\/model\\/Statement\\;\\)Lorg\\/junit\\/runners\\/model\\/Statement\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.Timeout\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExternalResource\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/rules\\/ExternalResource\\;Lorg\\/junit\\/runners\\/model\\/Statement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExternalResource\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ErrorCollector\\.verify\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.AllTests\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.JUnit4\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.BlockJUnit4ClassRunner\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.BlockJUnit4ClassRunner\\.createTest\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.ParentRunner\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.ParentRunner\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.ParentRunner\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.BlockJUnit4ClassRunner\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/runners\\/BlockJUnit4ClassRunner\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.BlockJUnit4ClassRunner\\$1\\.runReflectiveCall\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.parameterized\\.ParametersRunnerFactory\\.createRunnerForTestWithParameters\\:\\(Lorg\\/junit\\/runners\\/parameterized\\/TestWithParameters\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.parameterized\\.BlockJUnit4ClassRunnerWithParameters\\.\\<init\\>\\:\\(Lorg\\/junit\\/runners\\/parameterized\\/TestWithParameters\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.parameterized\\.BlockJUnit4ClassRunnerWithParameters\\.createTest\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.parameterized\\.BlockJUnit4ClassRunnerWithParameters\\.createTestUsingConstructorInjection\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.parameterized\\.BlockJUnit4ClassRunnerWithParameters\\.createTestUsingFieldInjection\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.parameterized\\.BlockJUnit4ClassRunnerWithParametersFactory\\.createRunnerForTestWithParameters\\:\\(Lorg\\/junit\\/runners\\/parameterized\\/TestWithParameters\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Suite\\.getAnnotatedClasses\\:\\(Ljava\\/lang\\/Class\\;\\)\\[Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Suite\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Suite\\.\\<init\\>\\:\\(Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\[Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Suite\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Suite\\.\\<init\\>\\:\\(Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Suite\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.MultipleFailureException\\.assertEmpty\\:\\(Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.RunnerBuilder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.RunnerBuilder\\.addParent\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.RunnerBuilder\\.runners\\:\\(Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.RunnerBuilder\\.runners\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.FrameworkField\\.get\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.Statement\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.FrameworkMethod\\.invokeExplosively\\:\\(Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.FrameworkMethod\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/runners\\/model\\/FrameworkMethod\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.FrameworkMethod\\$1\\.runReflectiveCall\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InstantiationException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.getParametersRunnerFactory\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runners\\/parameterized\\/ParametersRunnerFactory\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.allParameters\\:\\(\\)Ljava\\/lang\\/Iterable\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.getParametersMethod\\:\\(\\)Lorg\\/junit\\/runners\\/model\\/FrameworkMethod\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError", 
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.createRunnersForParameters\\:\\(Ljava\\/lang\\/Iterable\\;Ljava\\/lang\\/String\\;Lorg\\/junit\\/runners\\/parameterized\\/ParametersRunnerFactory\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.createTestsForParameters\\:\\(Ljava\\/lang\\/Iterable\\;Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.parametersMethodReturnedWrongType\\:\\(\\)Ljava\\/lang\\/Exception\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.FilterFactory\\.createFilter\\:\\(Lorg\\/junit\\/runner\\/FilterFactoryParams\\;\\)Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$Listener\\.testRunStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$Listener\\.testRunFinished\\:\\(Lorg\\/junit\\/runner\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$Listener\\.testFinished\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$Listener\\.testFailure\\:\\(Lorg\\/junit\\/runner\\/notification\\/Failure\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$Listener\\.testIgnored\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.FilterFactories\\.createFilterFromFilterSpec\\:\\(Lorg\\/junit\\/runner\\/Request\\;Ljava\\/lang\\/String\\;\\)Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.FilterFactories\\.createFilter\\:\\(Ljava\\/lang\\/String\\;Lorg\\/junit\\/runner\\/FilterFactoryParams\\;\\)Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.FilterFactories\\.createFilter\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/junit\\/runner\\/FilterFactoryParams\\;\\)Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.FilterFactories\\.createFilterFactory\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/junit\\/runner\\/FilterFactory\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.FilterFactories\\.createFilterFactory\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/FilterFactory\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$SerializedForm\\.\\<init\\>\\:\\(Ljava\\/io\\/ObjectInputStream\\$GetField\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$SerializedForm\\.serialize\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$SerializedForm\\.deserialize\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)Lorg\\/junit\\/runner\\/Result\\$SerializedForm\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.manipulation\\.Filter\\.apply\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.manipulation\\.Filterable\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.manipulation\\.Filter\\$1\\.apply\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Computer\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/Computer\\;Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Computer\\$1\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.notification.StoppedByUserException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\.fireTestStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunNotifier\\;Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$1\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$2\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunNotifier\\;Lorg\\/junit\\/runner\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$2\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$3\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunNotifier\\;Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$3\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$4\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunNotifier\\;Ljava\\/util\\/List\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$4\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.SynchronizedRunListener\\.testRunStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.SynchronizedRunListener\\.testRunFinished\\:\\(Lorg\\/junit\\/runner\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.SynchronizedRunListener\\.testStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.SynchronizedRunListener\\.testFinished\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.SynchronizedRunListener\\.testFailure\\:\\(Lorg\\/junit\\/runner\\/notification\\/Failure\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.SynchronizedRunListener\\.testIgnored\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$SafeNotifier\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$5\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$6\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunNotifier\\;Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$6\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$7\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunNotifier\\;Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$7\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunListener\\.testRunStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunListener\\.testRunFinished\\:\\(Lorg\\/junit\\/runner\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunListener\\.testStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunListener\\.testFinished\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunListener\\.testFailure\\:\\(Lorg\\/junit\\/runner\\/notification\\/Failure\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunListener\\.testIgnored\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Computer\\.getSuite\\:\\(Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\[Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Computer\\.getRunner\\:\\(Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.TestMethod\\.invoke\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException", 
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.TestClass\\.getConstructor\\:\\(\\)Ljava\\/lang\\/reflect\\/Constructor\\;"
 }, 
 {
  "exceptions": [
   "org.junit.internal.runners.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.JUnit4ClassRunner\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.runners.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.JUnit4ClassRunner\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.JUnit4ClassRunner\\.createTest\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.JUnit4ClassRunner\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.Fail\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.FailOnTimeout\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.RunAfters\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.RunBefores\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.ExpectException\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.InvokeMethod\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.FailOnTimeout\\$CallableStatement\\.call\\:\\(\\)Ljava\\/lang\\/Throwable\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.FailOnTimeout\\$CallableStatement\\.awaitStarted\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.FailOnTimeout\\$CallableStatement\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.internal.runners.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.MethodValidator\\.assertValid\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.JUnit38ClassRunner\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.SuiteMethod\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.SuiteMethod\\.testFromSuiteMethod\\:\\(Ljava\\/lang\\/Class\\;\\)Ljunit\\/framework\\/Test\\;"
 }, 
 {
  "exceptions": [
   "org.junit.internal.runners.FailedBefore"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.MethodRoadie\\.runBefores\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.runners.FailedBefore"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.ClassRoadie\\.runBefores\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.MethodRoadie\\$1\\$1\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.model\\.ReflectiveCallable\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.model\\.ReflectiveCallable\\.runReflectiveCall\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.ComparisonCriteria\\.arrayEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.Throwables\\.rethrowAsException\\:\\(Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/Exception\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.Throwables\\.rethrow\\:\\(Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.Classes\\.getClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.JUnit4Builder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.AnnotatedBuilder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.AnnotatedBuilder\\.buildRunner\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.JUnit3Builder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.AllDefaultPossibilitiesBuilder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.NullBuilder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.SuiteMethodBuilder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\$RememberingListener\\.testStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\$RememberingListener\\.testFinished\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\$RememberingListener\\.testFailure\\:\\(Lorg\\/junit\\/runner\\/notification\\/Failure\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\$RememberingListener\\.testRunFinished\\:\\(Lorg\\/junit\\/runner\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxCore\\$1\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/experimental\\/max\\/MaxCore\\$1\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.max.CouldNotReadCoreException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\.readHistory\\:\\(Ljava\\/io\\/File\\;\\)Lorg\\/junit\\/experimental\\/max\\/MaxHistory\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\.save\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\.access\\$000\\:\\(Lorg\\/junit\\/experimental\\/max\\/MaxHistory\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.ParallelComputer\\.getSuite\\:\\(Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\[Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.ParallelComputer\\.getRunner\\:\\(Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\$2\\.\\<init\\>\\:\\(Lorg\\/junit\\/experimental\\/theories\\/Theories\\$TheoryAnchor\\;Lorg\\/junit\\/experimental\\/theories\\/internal\\/Assignments\\;Lorg\\/junit\\/runners\\/model\\/FrameworkMethod\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\$2\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\.runWithAssignment\\:\\(Lorg\\/junit\\/experimental\\/theories\\/internal\\/Assignments\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\.runWithIncompleteAssignment\\:\\(Lorg\\/junit\\/experimental\\/theories\\/internal\\/Assignments\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\.runWithCompleteAssignment\\:\\(Lorg\\/junit\\/experimental\\/theories\\/internal\\/Assignments\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\.reportParameterizedError\\:\\(Ljava\\/lang\\/Throwable\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\$1\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/experimental\\/theories\\/Theories\\$TheoryAnchor\\$1\\;Lorg\\/junit\\/runners\\/model\\/Statement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\$1\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/experimental\\/theories\\/Theories\\$TheoryAnchor\\;Ljava\\/lang\\/Class\\;Lorg\\/junit\\/experimental\\/theories\\/internal\\/Assignments\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\$1\\.createTest\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.PotentialAssignment\\.getValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.PotentialAssignment\\.getDescription\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.AllMembersSupplier\\$MethodParameterValue\\.getValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.AllMembersSupplier\\$MethodParameterValue\\.getDescription\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.AllMembersSupplier\\.getValueSources\\:\\(Lorg\\/junit\\/experimental\\/theories\\/ParameterSignature\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.AllMembersSupplier\\.addMultiPointMethods\\:\\(Lorg\\/junit\\/experimental\\/theories\\/ParameterSignature\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.getActualValues\\:\\(II\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.potentialsForNextUnassigned\\:\\(\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.getSupplier\\:\\(Lorg\\/junit\\/experimental\\/theories\\/ParameterSignature\\;\\)Lorg\\/junit\\/experimental\\/theories\\/ParameterSupplier\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.buildParameterSupplierFromClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/experimental\\/theories\\/ParameterSupplier\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.getConstructorArguments\\:\\(\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.getMethodArguments\\:\\(\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.getAllArguments\\:\\(\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.getArgumentStrings\\:\\(Z\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.ParameterSupplier\\.getValueSources\\:\\(Lorg\\/junit\\/experimental\\/theories\\/ParameterSignature\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.categories\\.CategoryFilterFactory\\.createFilter\\:\\(Lorg\\/junit\\/runner\\/FilterFactoryParams\\;\\)Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.categories\\.CategoryFilterFactory\\.parseCategories\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.categories\\.Categories\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.categories\\.Categories\\.assertNoCategorizedDescendentsOfUncategorizeableParents\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.categories\\.Categories\\.assertNoDescendantsHaveCategoryAnnotations\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.runners\\.Enclosed\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "junit\\.framework\\.TestCase\\.runBare\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "junit\\.framework\\.TestCase\\.runTest\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.framework\\.TestCase\\.setUp\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.framework\\.TestCase\\.tearDown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "junit\\.framework\\.JUnit4TestAdapter\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "junit\\.framework\\.TestResult\\$1\\.\\<init\\>\\:\\(Ljunit\\/framework\\/TestResult\\;Ljunit\\/framework\\/TestCase\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "junit\\.framework\\.TestResult\\$1\\.protect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "junit\\.framework\\.TestSuite\\.getTestConstructor\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/reflect\\/Constructor\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "junit\\.framework\\.Protectable\\.protect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.framework\\.JUnit4TestAdapterCache\\$1\\.testFailure\\:\\(Lorg\\/junit\\/runner\\/notification\\/Failure\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.framework\\.JUnit4TestAdapterCache\\$1\\.testFinished\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.framework\\.JUnit4TestAdapterCache\\$1\\.testStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "junit\\.runner\\.BaseTestRunner\\.savePreferences\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "junit\\.runner\\.BaseTestRunner\\.loadSuiteClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.extensions\\.TestSetup\\.setUp\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.extensions\\.TestSetup\\.tearDown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.extensions\\.TestSetup\\$1\\.\\<init\\>\\:\\(Ljunit\\/extensions\\/TestSetup\\;Ljunit\\/framework\\/TestResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.extensions\\.TestSetup\\$1\\.protect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.textui\\.TestRunner\\.start\\:\\(\\[Ljava\\/lang\\/String\\;\\)Ljunit\\/framework\\/TestResult\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.textui\\.TestRunner\\.runSingleMethod\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Z\\)Ljunit\\/framework\\/TestResult\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.AntClassLoader\\.addPathElement\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.AntClassLoader\\.addPathFile\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.AntClassLoader\\.forceLoadClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.AntClassLoader\\.forceLoadSystemClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.AntClassLoader\\.getNamedResources\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Enumeration\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.AntClassLoader\\.findResources\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Enumeration\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.AntClassLoader\\.findResources\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljava\\/util\\/Enumeration\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.AntClassLoader\\.loadClass\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.AntClassLoader\\.defineClassFromData\\:\\(Ljava\\/io\\/File\\;\\[BLjava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.AntClassLoader\\.definePackage\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.AntClassLoader\\.getJarManifest\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/util\\/jar\\/Manifest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.AntClassLoader\\.getCertificates\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;\\)\\[Ljava\\/security\\/cert\\/Certificate\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.AntClassLoader\\.getClassFromStream\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;Ljava\\/io\\/File\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.AntClassLoader\\.findClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.AntClassLoader\\.findClassInComponents\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.AntClassLoader\\.findBaseClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.AntClassLoader\\.isZip\\:\\(Ljava\\/io\\/File\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.AntClassLoader\\.readFully\\:\\(Ljava\\/io\\/File\\;\\[B\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.AntTypeDefinition\\.innerGetTypeClass\\:\\(\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.InstantiationException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.AntTypeDefinition\\.innerCreateAndSet\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.ArgumentProcessorRegistry\\.registerArgumentProcessor\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.ArgumentProcessorRegistry\\.registerArgumentProcessor\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.ArgumentProcessorRegistry\\.getProcessorByService\\:\\(Ljava\\/io\\/InputStream\\;\\)Lorg\\/apache\\/tools\\/ant\\/ArgumentProcessor\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.ComponentHelper\\.createComponent\\:\\(Lorg\\/apache\\/tools\\/ant\\/UnknownElement\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.ComponentHelper\\.checkTaskClass\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.ComponentHelper\\.createTask\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/tools\\/ant\\/Task\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.ComponentHelper\\.createNewTask\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/tools\\/ant\\/Task\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.ComponentHelper\\.createDataType\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.ComponentHelper\\.getDefaultDefinitions\\:\\(Z\\)Ljava\\/util\\/Properties\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.DemuxInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.DemuxInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.DemuxOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.DemuxOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.DemuxOutputStream\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.DemuxOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Diagnostics\\.validateVersion\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.DirectoryScanner\\.scan\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.DynamicAttribute\\.setDynamicAttribute\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.DynamicAttributeNS\\.setDynamicAttribute\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.DynamicElement\\.createDynamicElement\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.DynamicElementNS\\.createDynamicElement\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.DynamicObjectAttribute\\.setDynamicAttribute\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Executor\\.executeTargets\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.FileScanner\\.scan\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException", 
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\$10\\.set\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException", 
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\$11\\.set\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException", 
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\$12\\.set\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\$13\\.create\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException", 
   "java.lang.InstantiationException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\$13\\.store\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\$2\\.set\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\$3\\.set\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\$4\\.set\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\$5\\.set\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException", 
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\$6\\.set\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\$7\\.set\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException", 
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\$8\\.set\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException", 
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\$9\\.set\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException", 
   "java.lang.InstantiationException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\$AddNestedCreator\\.create\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException", 
   "java.lang.InstantiationException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\$AddNestedCreator\\.store\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException", 
   "java.lang.InstantiationException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\$AddNestedCreator\\.istore\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException", 
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\$AttributeSetter\\.setObject\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException", 
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\$AttributeSetter\\.set\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\$CreateNestedCreator\\.create\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException", 
   "java.lang.InstantiationException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\$NestedCreator\\.create\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException", 
   "java.lang.InstantiationException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\$NestedCreator\\.store\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\.setAttribute\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\.setAttribute\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\.addText\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\.getNestedCreator\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/UnknownElement\\;\\)Lorg\\/apache\\/tools\\/ant\\/IntrospectionHelper\\$NestedCreator\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\.createElement\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\.storeElement\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\.getElementType\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\.getAttributeType\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\.getAddTextMethod\\:\\(\\)Ljava\\/lang\\/reflect\\/Method\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\.getElementMethod\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/reflect\\/Method\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\.getAttributeMethod\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/reflect\\/Method\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.IntrospectionHelper\\.createAddTypeCreator\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/tools\\/ant\\/IntrospectionHelper\\$NestedCreator\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Main\\.\\<init\\>\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Main\\.runBuild\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Main\\.addInputHandler\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Main\\.printVersion\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Main\\.getAntVersion\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Main\\.getShortAntVersion\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.PathTokenizer\\.nextToken\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.initProperties\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.replaceProperties\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.setBasedir\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.setBaseDir\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.setJavaVersionProperty\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.addTaskDefinition\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.checkTaskClass\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.addTarget\\:\\(Lorg\\/apache\\/tools\\/ant\\/Target\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.addTarget\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/Target\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.createTask\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/tools\\/ant\\/Task\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.createDataType\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.executeTargets\\:\\(Ljava\\/util\\/Vector\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.defaultInput\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.demuxInput\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.executeTarget\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.executeSortedTargets\\:\\(Ljava\\/util\\/Vector\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.copyFile\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.copyFile\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.copyFile\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;ZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.copyFile\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;ZZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.copyFile\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.copyFile\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.copyFile\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;ZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.copyFile\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;ZZZ\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.setFileLastModified\\:\\(Ljava\\/io\\/File\\;J\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.topoSort\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Hashtable\\;\\)Ljava\\/util\\/Vector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.topoSort\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Hashtable\\;Z\\)Ljava\\/util\\/Vector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.topoSort\\:\\(\\[Ljava\\/lang\\/String\\;Ljava\\/util\\/Hashtable\\;Z\\)Ljava\\/util\\/Vector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Project\\.tsort\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Hashtable\\;Ljava\\/util\\/Hashtable\\;Ljava\\/util\\/Stack\\;Ljava\\/util\\/Vector\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.ProjectComponent\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.ProjectHelper\\.configureProject\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.ProjectHelper\\.parse\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.ProjectHelper\\.configure\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/xml\\/sax\\/AttributeList\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.ProjectHelper\\.addText\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.ProjectHelper\\.addText\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.ProjectHelper\\.replaceProperties\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.ProjectHelper\\.replaceProperties\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/String\\;Ljava\\/util\\/Hashtable\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.ProjectHelper\\.parsePropertyString\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Vector\\;Ljava\\/util\\/Vector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.ProjectHelper\\.resolveExtensionOfAttributes\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.ProjectHelperRepository\\.registerProjectHelper\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.ProjectHelperRepository\\.registerProjectHelper\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.ProjectHelperRepository\\.getHelperConstructor\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/reflect\\/Constructor\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.ProjectHelperRepository\\.getProjectHelperForBuildFile\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;\\)Lorg\\/apache\\/tools\\/ant\\/ProjectHelper\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.ProjectHelperRepository\\.getProjectHelperForAntlib\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;\\)Lorg\\/apache\\/tools\\/ant\\/ProjectHelper\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.PropertyHelper\\.parsePropertyString\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Vector\\;Ljava\\/util\\/Vector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.PropertyHelper\\.replaceProperties\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/util\\/Hashtable\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.PropertyHelper\\.replaceProperties\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.PropertyHelper\\.parseProperties\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.PropertyHelper\\.parsePropertyStringDefault\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Vector\\;Ljava\\/util\\/Vector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.RuntimeConfigurable\\.maybeConfigure\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.RuntimeConfigurable\\.maybeConfigure\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Target\\$IfStringCondition\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Target\\$UnlessStringCondition\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Target\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Task\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Task\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Task\\.maybeConfigure\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.Task\\.handleInput\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.TaskAdapter\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.TaskConfigurationChecker\\.checkErrors\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.UnknownElement\\.maybeConfigure\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.UnknownElement\\.handleInput\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.UnknownElement\\.handleChildren\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/apache\\/tools\\/ant\\/RuntimeConfigurable\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.dispatch\\.DispatchUtils\\.execute\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.BaseFilterReader\\.read\\:\\(\\[CII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.BaseFilterReader\\.skip\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.BaseFilterReader\\.readLine\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.BaseFilterReader\\.readFully\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.ClassConstants\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.ConcatFilter\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.ConcatFilter\\.initialize\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.EscapeUnicode\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.ExpandProperties\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.FixCrLfFilter\\$AddAsisRemove\\.resolve\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/filters\\/FixCrLfFilter\\$AddAsisRemove\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.FixCrLfFilter\\$AddEofFilter\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.FixCrLfFilter\\$AddTabFilter\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.FixCrLfFilter\\$MaskJavaTabLiteralsFilter\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.FixCrLfFilter\\$NormalizeEolFilter\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.FixCrLfFilter\\$RemoveEofFilter\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.FixCrLfFilter\\$RemoveTabFilter\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.FixCrLfFilter\\$SimpleFilterReader\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.FixCrLfFilter\\$SimpleFilterReader\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.FixCrLfFilter\\$SimpleFilterReader\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.FixCrLfFilter\\$SimpleFilterReader\\.ready\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.FixCrLfFilter\\$SimpleFilterReader\\.mark\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.FixCrLfFilter\\$SimpleFilterReader\\.skip\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.FixCrLfFilter\\$SimpleFilterReader\\.read\\:\\(\\[C\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.FixCrLfFilter\\$SimpleFilterReader\\.read\\:\\(\\[CII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.FixCrLfFilter\\.\\<init\\>\\:\\(Ljava\\/io\\/Reader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.FixCrLfFilter\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.FixCrLfFilter\\.setTablength\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.HeadFilter\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.LineContains\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.LineContainsRegExp\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.PrefixLines\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.ReplaceTokens\\.getNextChar\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.ReplaceTokens\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.SortFilter\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.SortFilter\\.initialize\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.StripJavaComments\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.StripLineBreaks\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.StripLineComments\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.SuffixLines\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.TabsToSpaces\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.TailFilter\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.TokenFilter\\$DeleteCharacters\\$1\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.TokenFilter\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.util\\.ChainReaderHelper\\$1\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.util\\.ChainReaderHelper\\$1\\.finalize\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.util\\.ChainReaderHelper\\.getAssembledReader\\:\\(\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.filters\\.util\\.ChainReaderHelper\\.readFully\\:\\(Ljava\\/io\\/Reader\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.AntXMLContext\\.setBuildFile\\:\\(Ljava\\/net\\/URL\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.DefaultExecutor\\.executeTargets\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.IgnoreDependenciesExecutor\\.executeTargets\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelper2\\$AntHandler\\.onStartElement\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;Lorg\\/apache\\/tools\\/ant\\/helper\\/AntXMLContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelper2\\$AntHandler\\.onStartChild\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;Lorg\\/apache\\/tools\\/ant\\/helper\\/AntXMLContext\\;\\)Lorg\\/apache\\/tools\\/ant\\/helper\\/ProjectHelper2\\$AntHandler\\;"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelper2\\$AntHandler\\.onEndChild\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/helper\\/AntXMLContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelper2\\$AntHandler\\.characters\\:\\(\\[CIILorg\\/apache\\/tools\\/ant\\/helper\\/AntXMLContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelper2\\$ElementHandler\\.onStartElement\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;Lorg\\/apache\\/tools\\/ant\\/helper\\/AntXMLContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelper2\\$ElementHandler\\.characters\\:\\(\\[CIILorg\\/apache\\/tools\\/ant\\/helper\\/AntXMLContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelper2\\$ElementHandler\\.onStartChild\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;Lorg\\/apache\\/tools\\/ant\\/helper\\/AntXMLContext\\;\\)Lorg\\/apache\\/tools\\/ant\\/helper\\/ProjectHelper2\\$AntHandler\\;"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelper2\\$MainHandler\\.onStartChild\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;Lorg\\/apache\\/tools\\/ant\\/helper\\/AntXMLContext\\;\\)Lorg\\/apache\\/tools\\/ant\\/helper\\/ProjectHelper2\\$AntHandler\\;"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelper2\\$ProjectHandler\\.onStartElement\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;Lorg\\/apache\\/tools\\/ant\\/helper\\/AntXMLContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelper2\\$ProjectHandler\\.onStartChild\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;Lorg\\/apache\\/tools\\/ant\\/helper\\/AntXMLContext\\;\\)Lorg\\/apache\\/tools\\/ant\\/helper\\/ProjectHelper2\\$AntHandler\\;"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelper2\\$RootHandler\\.startElement\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelper2\\$RootHandler\\.endElement\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelper2\\$RootHandler\\.characters\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelper2\\$TargetHandler\\.onStartElement\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;Lorg\\/apache\\/tools\\/ant\\/helper\\/AntXMLContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelper2\\$TargetHandler\\.onStartChild\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;Lorg\\/apache\\/tools\\/ant\\/helper\\/AntXMLContext\\;\\)Lorg\\/apache\\/tools\\/ant\\/helper\\/ProjectHelper2\\$AntHandler\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelper2\\.parseUnknownElement\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/net\\/URL\\;\\)Lorg\\/apache\\/tools\\/ant\\/UnknownElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelper2\\.parse\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelper2\\.parse\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;Lorg\\/apache\\/tools\\/ant\\/helper\\/ProjectHelper2\\$RootHandler\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelperImpl\\$AbstractHandler\\.startElement\\:\\(Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/AttributeList\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelperImpl\\$AbstractHandler\\.characters\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelperImpl\\$AbstractHandler\\.endElement\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelperImpl\\$DataTypeHandler\\.init\\:\\(Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/AttributeList\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelperImpl\\$DataTypeHandler\\.startElement\\:\\(Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/AttributeList\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelperImpl\\$NestedElementHandler\\.init\\:\\(Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/AttributeList\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelperImpl\\$NestedElementHandler\\.startElement\\:\\(Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/AttributeList\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelperImpl\\$ProjectHandler\\.init\\:\\(Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/AttributeList\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelperImpl\\$ProjectHandler\\.startElement\\:\\(Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/AttributeList\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelperImpl\\$ProjectHandler\\.handleTarget\\:\\(Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/AttributeList\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelperImpl\\$RootHandler\\.startElement\\:\\(Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/AttributeList\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelperImpl\\$TargetHandler\\.init\\:\\(Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/AttributeList\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelperImpl\\$TargetHandler\\.startElement\\:\\(Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/AttributeList\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelperImpl\\$TaskHandler\\.init\\:\\(Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/AttributeList\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelperImpl\\$TaskHandler\\.startElement\\:\\(Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/AttributeList\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelperImpl\\.parse\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelperImpl\\.handleElement\\:\\(Lorg\\/apache\\/tools\\/ant\\/helper\\/ProjectHelperImpl\\;Lorg\\/xml\\/sax\\/DocumentHandler\\;Lorg\\/apache\\/tools\\/ant\\/Target\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/AttributeList\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.ProjectHelperImpl\\.access\\$700\\:\\(Lorg\\/apache\\/tools\\/ant\\/helper\\/ProjectHelperImpl\\;Lorg\\/xml\\/sax\\/DocumentHandler\\;Lorg\\/apache\\/tools\\/ant\\/Target\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/AttributeList\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.helper\\.SingleCheckExecutor\\.executeTargets\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.input\\.DefaultInputHandler\\.handleInput\\:\\(Lorg\\/apache\\/tools\\/ant\\/input\\/InputRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.input\\.GreedyInputHandler\\.handleInput\\:\\(Lorg\\/apache\\/tools\\/ant\\/input\\/InputRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.input\\.InputHandler\\.handleInput\\:\\(Lorg\\/apache\\/tools\\/ant\\/input\\/InputRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.input\\.PropertyFileInputHandler\\.handleInput\\:\\(Lorg\\/apache\\/tools\\/ant\\/input\\/InputRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.input\\.PropertyFileInputHandler\\.readProps\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.input\\.SecureInputHandler\\.handleInput\\:\\(Lorg\\/apache\\/tools\\/ant\\/input\\/InputRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.listener\\.MailLogger\\.getValue\\:\\(Ljava\\/util\\/Hashtable\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.listener\\.MailLogger\\.sendMail\\:\\(Lorg\\/apache\\/tools\\/ant\\/listener\\/MailLogger\\$Values\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.loader\\.AntClassLoader5\\.getResources\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Enumeration\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.AbstractCvsTask\\.runCommand\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Commandline\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.AbstractCvsTask\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.AbstractJarSignerTask\\.declareSysProperty\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/ExecTask\\;Lorg\\/apache\\/tools\\/ant\\/types\\/Environment\\$Variable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Ant\\.handleInput\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Ant\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Ant\\.overrideProperties\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Ant\\.addReferences\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.AntStructure\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.AntlibDefinition\\.setURI\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Apt\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Available\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Available\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Basename\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.BindTargets\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.BuildNumber\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.BuildNumber\\.getBuildNumber\\:\\(Ljava\\/util\\/Properties\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.BuildNumber\\.loadProperties\\:\\(\\)Ljava\\/util\\/Properties\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.BuildNumber\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.CVSPass\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.CallTarget\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.CallTarget\\.handleInput\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Checksum\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Checksum\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Checksum\\.validateAndExecute\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Checksum\\.addToIncludeFileMap\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Checksum\\.generateChecksums\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Checksum\\.decodeHex\\:\\(\\[C\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Chmod\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Classloader\\.setClasspathRef\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Reference\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Concat\\$1\\.getReader\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Concat\\$1\\.getReader\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Concat\\$2\\.getReader\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Concat\\$ConcatResource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Concat\\$MultiReader\\.getReader\\:\\(\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Concat\\$MultiReader\\.nextReader\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Concat\\$MultiReader\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Concat\\$MultiReader\\.read\\:\\(\\[CII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Concat\\$MultiReader\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Concat\\$ReaderFactory\\.getReader\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Concat\\$TextElement\\.setFile\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.ConditionTask\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Copy\\.createMapper\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/types\\/Mapper\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Copy\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Copy\\.validateAttributes\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.CopyPath\\.validateAttributes\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.CopyPath\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Copydir\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Copyfile\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.DefBase\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.DefaultExcludes\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Definer\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Definer\\.addDefinition\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Delete\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Deltree\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Deltree\\.removeDir\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.DependSet\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.DiagnosticsTask\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Dirname\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Ear\\.initZipOutputStream\\:\\(Lorg\\/apache\\/tools\\/zip\\/ZipOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Ear\\.zipFile\\:\\(Ljava\\/io\\/File\\;Lorg\\/apache\\/tools\\/zip\\/ZipOutputStream\\;Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Echo\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Exec\\$StreamPumper\\.pumpStream\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Exec\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Exec\\.run\\:\\(Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.ExecTask\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.ExecTask\\.checkConfiguration\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.ExecTask\\.prepareExec\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Execute\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.ExecTask\\.runExecute\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Execute\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.ExecTask\\.runExec\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Execute\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.ExecTask\\.createHandler\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/ExecuteStreamHandler\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.ExecTask\\.createWatchdog\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/ExecuteWatchdog\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Execute\\$1\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Execute\\.setAntRun\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Execute\\.launch\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Ljava\\/io\\/File\\;Z\\)Ljava\\/lang\\/Process\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Execute\\.execute\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Execute\\.spawn\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Execute\\.runCommand\\:\\(Lorg\\/apache\\/tools\\/ant\\/Task\\;\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Execute\\.getVMSLogicals\\:\\(Ljava\\/io\\/BufferedReader\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.ExecuteJava\\.execute\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.ExecuteJava\\.fork\\:\\(Lorg\\/apache\\/tools\\/ant\\/ProjectComponent\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.ExecuteOn\\.createMapper\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/types\\/Mapper\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.ExecuteOn\\.createHandler\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/ExecuteStreamHandler\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.ExecuteOn\\.runExec\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Execute\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.ExecuteOn\\.runParallel\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Execute\\;Ljava\\/util\\/Vector\\;Ljava\\/util\\/Vector\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.ExecuteStreamHandler\\.setProcessInputStream\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.ExecuteStreamHandler\\.setProcessErrorStream\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.ExecuteStreamHandler\\.setProcessOutputStream\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.ExecuteStreamHandler\\.start\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.ExecuteWatchdog\\.checkException\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Exit\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Expand\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Expand\\.extractFile\\:\\(Lorg\\/apache\\/tools\\/ant\\/util\\/FileUtils\\;Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;Ljava\\/util\\/Date\\;ZLorg\\/apache\\/tools\\/ant\\/util\\/FileNameMapper\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Expand\\.createMapper\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/types\\/Mapper\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Filter\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Filter\\.readFilters\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.FixCRLF\\$OneLiner\\$BufferLine\\.\\<init\\>\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/FixCRLF\\$OneLiner\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.FixCRLF\\$OneLiner\\.\\<init\\>\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/FixCRLF\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.FixCRLF\\$OneLiner\\.nextLine\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.FixCRLF\\$OneLiner\\.nextElement\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.FixCRLF\\$OneLiner\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.FixCRLF\\.setTablength\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.FixCRLF\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.FixCRLF\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.FixCRLF\\.processFile\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.GenerateKey\\.createDname\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/GenerateKey\\$DistinguishedName\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.GenerateKey\\.setKeysize\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.GenerateKey\\.setValidity\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.GenerateKey\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Get\\$GetThread\\.get\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Get\\$GetThread\\.openConnection\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/net\\/URLConnection\\;"
 }, 
 {
  "exceptions": [
   "java.io.FileNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Get\\$GetThread\\.downloadFile\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Get\\$GetThread\\.wasSuccessful\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Get\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Get\\.doGet\\:\\(ILorg\\/apache\\/tools\\/ant\\/taskdefs\\/Get\\$DownloadProgress\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Get\\.doGet\\:\\(Ljava\\/net\\/URL\\;Ljava\\/io\\/File\\;ILorg\\/apache\\/tools\\/ant\\/taskdefs\\/Get\\$DownloadProgress\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Get\\.createMapper\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/types\\/Mapper\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.HostInfo\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Input\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.JDBCTask\\.getConnection\\:\\(\\)Ljava\\/sql\\/Connection\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.JDBCTask\\.getDriver\\:\\(\\)Ljava\\/sql\\/Driver\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.taskdefs.ManifestException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Jar\\.addConfiguredManifest\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Manifest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Jar\\.getManifestFromJar\\:\\(Ljava\\/io\\/File\\;\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Manifest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Jar\\.jarHasIndex\\:\\(Ljava\\/io\\/File\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Jar\\.writeServices\\:\\(Lorg\\/apache\\/tools\\/zip\\/ZipOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Jar\\.initZipOutputStream\\:\\(Lorg\\/apache\\/tools\\/zip\\/ZipOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Jar\\.createManifest\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Manifest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Jar\\.writeManifest\\:\\(Lorg\\/apache\\/tools\\/zip\\/ZipOutputStream\\;Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Manifest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Jar\\.finalizeZipOutputStream\\:\\(Lorg\\/apache\\/tools\\/zip\\/ZipOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Jar\\.createIndexList\\:\\(Lorg\\/apache\\/tools\\/zip\\/ZipOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Jar\\.zipFile\\:\\(Ljava\\/io\\/InputStream\\;Lorg\\/apache\\/tools\\/zip\\/ZipOutputStream\\;Ljava\\/lang\\/String\\;JLjava\\/io\\/File\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Jar\\.filesetManifest\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Jar\\.getResourcesToAdd\\:\\(\\[Lorg\\/apache\\/tools\\/ant\\/types\\/ResourceCollection\\;Ljava\\/io\\/File\\;Z\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Zip\\$ArchiveState\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Jar\\.createEmptyZip\\:\\(Ljava\\/io\\/File\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Jar\\.writeIndexLikeList\\:\\(Ljava\\/util\\/List\\;Ljava\\/util\\/List\\;Ljava\\/io\\/PrintWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Jar\\.grabFilesAndDirs\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/List\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Java\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Java\\.executeJava\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Java\\.checkConfiguration\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Java\\.setJar\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Java\\.setClassname\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Java\\.handleInput\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Java\\.run\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/CommandlineJava\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Java\\.fork\\:\\(\\[Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Java\\.spawn\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Java\\.run\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Vector\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Java\\.createWatchdog\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/ExecuteWatchdog\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Javac\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Javac\\.checkParameters\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Javac\\.generateMissingPackageInfoClasses\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Javadoc\\$TagArgument\\.setScope\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Javadoc\\$TagArgument\\.getParameter\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Javadoc\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Javadoc\\.doSourceAndPackageNames\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Commandline\\;Ljava\\/util\\/Vector\\;Ljava\\/util\\/Vector\\;ZLjava\\/io\\/File\\;Ljava\\/io\\/BufferedWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Javadoc\\.postProcessGeneratedJavadocs\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Javadoc\\.postProcess\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.JikesOutputParser\\.setProcessOutputStream\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.JikesOutputParser\\.start\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.JikesOutputParser\\.parseOutput\\:\\(Ljava\\/io\\/BufferedReader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.JikesOutputParser\\.parseStandardOutput\\:\\(Ljava\\/io\\/BufferedReader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.JikesOutputParser\\.parseEmacsOutput\\:\\(Ljava\\/io\\/BufferedReader\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.KeySubst\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.KeySubst\\.replace\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Hashtable\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.LoadProperties\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.LoadResource\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.MacroInstance\\.createDynamicElement\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.MakeUrl\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.taskdefs.ManifestException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Manifest\\$Attribute\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.taskdefs.ManifestException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Manifest\\$Attribute\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Manifest\\$Attribute\\.write\\:\\(Ljava\\/io\\/PrintWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Manifest\\$Attribute\\.write\\:\\(Ljava\\/io\\/PrintWriter\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Manifest\\$Attribute\\.writeValue\\:\\(Ljava\\/io\\/PrintWriter\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.taskdefs.ManifestException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Manifest\\$Section\\.read\\:\\(Ljava\\/io\\/BufferedReader\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.taskdefs.ManifestException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Manifest\\$Section\\.merge\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Manifest\\$Section\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.taskdefs.ManifestException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Manifest\\$Section\\.merge\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Manifest\\$Section\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Manifest\\$Section\\.write\\:\\(Ljava\\/io\\/PrintWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Manifest\\$Section\\.write\\:\\(Ljava\\/io\\/PrintWriter\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.taskdefs.ManifestException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Manifest\\$Section\\.addConfiguredAttribute\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Manifest\\$Attribute\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.taskdefs.ManifestException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Manifest\\$Section\\.addAttributeAndCheck\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Manifest\\$Attribute\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Manifest\\.getDefaultManifest\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Manifest\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.taskdefs.ManifestException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Manifest\\.\\<init\\>\\:\\(Ljava\\/io\\/Reader\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.taskdefs.ManifestException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Manifest\\.addConfiguredSection\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Manifest\\$Section\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.taskdefs.ManifestException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Manifest\\.addConfiguredAttribute\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Manifest\\$Attribute\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.taskdefs.ManifestException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Manifest\\.merge\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Manifest\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.taskdefs.ManifestException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Manifest\\.merge\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Manifest\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.taskdefs.ManifestException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Manifest\\.merge\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Manifest\\;ZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Manifest\\.write\\:\\(Ljava\\/io\\/PrintWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Manifest\\.write\\:\\(Ljava\\/io\\/PrintWriter\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.taskdefs.ManifestException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.ManifestTask\\.addConfiguredSection\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Manifest\\$Section\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.taskdefs.ManifestException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.ManifestTask\\.addConfiguredAttribute\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Manifest\\$Attribute\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.ManifestTask\\.checkAttribute\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Manifest\\$Attribute\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.ManifestTask\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Mkdir\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Move\\.validateAttributes\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Move\\.renameFile\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;ZZ\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Nice\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Pack\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Pack\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Pack\\.zipFile\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Pack\\.zipFile\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Pack\\.zipResource\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Parallel\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Parallel\\.spinThreads\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Patch\\.setStrip\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Patch\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.PathConvert\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.PathConvert\\.validateSetup\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.ProjectHelperTask\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Property\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Property\\.loadUrl\\:\\(Ljava\\/net\\/URL\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Property\\.loadProperties\\:\\(Ljava\\/util\\/Properties\\;Ljava\\/io\\/InputStream\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Property\\.loadFile\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Property\\.resolveAllProperties\\:\\(Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.PropertyHelperTask\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Recorder\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Recorder\\.getRecorder\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/RecorderEntry\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.RecorderEntry\\.openFile\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.RecorderEntry\\.reopenFile\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.RecorderEntry\\.openFileImpl\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Redirector\\$PropertyOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Redirector\\.setPropertyFromBAOS\\:\\(Ljava\\/io\\/ByteArrayOutputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Redirector\\.createHandler\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/ExecuteStreamHandler\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Redirector\\.handleInput\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Redirector\\.complete\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Redirector\\.access\\$300\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Redirector\\;Ljava\\/io\\/ByteArrayOutputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Rename\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Replace\\$FileInput\\.\\<init\\>\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Replace\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Replace\\$FileInput\\.readChunk\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Replace\\$FileInput\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Replace\\$FileOutput\\.\\<init\\>\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Replace\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Replace\\$FileOutput\\.process\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Replace\\$FileOutput\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Replace\\$FileOutput\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Replace\\$Replacefilter\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Replace\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Replace\\.validateAttributes\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Replace\\.validateReplacefilters\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Replace\\.getProperties\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/util\\/Properties\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Replace\\.getProperties\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;\\)Ljava\\/util\\/Properties\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Replace\\.processFile\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Retry\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Rmic\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Rmic\\.moveGeneratedFile\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/rmic\\/RmicAdapter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.SQLExec\\$Transaction\\.runTransaction\\:\\(Ljava\\/io\\/PrintStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.SQLExec\\$Transaction\\.access\\$000\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/SQLExec\\$Transaction\\;Ljava\\/io\\/PrintStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.SQLExec\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.SQLExec\\.runStatements\\:\\(Ljava\\/io\\/Reader\\;Ljava\\/io\\/PrintStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.SQLExec\\.execSQL\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/PrintStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.SQLExec\\.printResults\\:\\(Ljava\\/io\\/PrintStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.SQLExec\\.printResults\\:\\(Ljava\\/sql\\/ResultSet\\;Ljava\\/io\\/PrintStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.SQLExec\\.printValue\\:\\(Ljava\\/sql\\/ResultSet\\;ILjava\\/io\\/PrintStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.SQLExec\\.getStatement\\:\\(\\)Ljava\\/sql\\/Statement\\;"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.SQLExec\\.printWarnings\\:\\(Ljava\\/sql\\/SQLWarning\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Sequential\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.SignJar\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.SignJar\\.signOneJar\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Sleep\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Sleep\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.StreamPumper\\.waitFor\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.StreamPumper\\.waitForInput\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.SubAnt\\.handleInput\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.SubAnt\\.execute\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Sync\\$SyncTarget\\.setDir\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Sync\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Sync\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Tar\\$TarCompressionMethod\\.compress\\:\\(Ljava\\/io\\/OutputStream\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Tar\\$TarCompressionMethod\\.access\\$000\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Tar\\$TarCompressionMethod\\;Ljava\\/io\\/OutputStream\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Tar\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Tar\\.tarFile\\:\\(Ljava\\/io\\/File\\;Lorg\\/apache\\/tools\\/tar\\/TarOutputStream\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Tar\\$TarFileSet\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Tar\\.tarResource\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Lorg\\/apache\\/tools\\/tar\\/TarOutputStream\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Tar\\$TarFileSet\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Tar\\.tar\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/ResourceCollection\\;Lorg\\/apache\\/tools\\/tar\\/TarOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.TaskOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.TempFile\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Touch\\.add\\:\\(Lorg\\/apache\\/tools\\/ant\\/util\\/FileNameMapper\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Touch\\.checkConfiguration\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Touch\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Touch\\.touch\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Tstamp\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Unpack\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Unpack\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Untar\\$UntarCompressionMethod\\.decompress\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/InputStream\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Untar\\.expandStream\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/InputStream\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.UpToDate\\.createMapper\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/types\\/Mapper\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.UpToDate\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.VerifyJar\\$BufferingOutputFilterReader\\.read\\:\\(\\[CII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.VerifyJar\\$BufferingOutputFilterReader\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.VerifyJar\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.WaitFor\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.War\\.initZipOutputStream\\:\\(Lorg\\/apache\\/tools\\/zip\\/ZipOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.War\\.zipFile\\:\\(Ljava\\/io\\/File\\;Lorg\\/apache\\/tools\\/zip\\/ZipOutputStream\\;Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.WhichResource\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.XSLTLiaison\\.setStylesheet\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.XSLTLiaison\\.addParam\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.XSLTLiaison\\.transform\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.XSLTLiaison3\\.setStylesheet\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.XSLTLiaison4\\.addParam\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.XSLTProcess\\$Factory\\$Attribute\\.createDynamicElement\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.XSLTProcess\\$Factory\\$Attribute\\.setDynamicAttribute\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.XSLTProcess\\$Param\\.getName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.XSLTProcess\\$Param\\.getExpression\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.XSLTProcess\\.add\\:\\(Lorg\\/apache\\/tools\\/ant\\/util\\/FileNameMapper\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.XSLTProcess\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.XSLTProcess\\.resolveProcessor\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.XSLTProcess\\.loadClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.XSLTProcess\\.process\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;Ljava\\/io\\/File\\;Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.XSLTProcess\\.process\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.XSLTProcess\\.ensureDirectoryFor\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.XSLTProcess\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.XSLTProcess\\.configureLiaison\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.XSLTProcess\\.configureLiaison\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.xpath.XPathExpressionException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.XSLTProcess\\.evaluateParam\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/XSLTProcess\\$Param\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.XSLTProcess\\.setLiaisonDynamicFileParameters\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/XSLTLiaison\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.XSLTProcess\\.createFactory\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/XSLTProcess\\$Factory\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.XmlProperty\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Zip\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Zip\\.executeMain\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Zip\\.closeZout\\:\\(Lorg\\/apache\\/tools\\/zip\\/ZipOutputStream\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Zip\\.addResources\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/FileSet\\;\\[Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Lorg\\/apache\\/tools\\/zip\\/ZipOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Zip\\.addDirectoryResource\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/io\\/File\\;Lorg\\/apache\\/tools\\/zip\\/ZipOutputStream\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Zip\\.getUnixMode\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Lorg\\/apache\\/tools\\/zip\\/ZipFile\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Zip\\.addResource\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/zip\\/ZipOutputStream\\;ILorg\\/apache\\/tools\\/zip\\/ZipFile\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Zip\\.addResources\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/ResourceCollection\\;\\[Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Lorg\\/apache\\/tools\\/zip\\/ZipOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Zip\\.initZipOutputStream\\:\\(Lorg\\/apache\\/tools\\/zip\\/ZipOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Zip\\.finalizeZipOutputStream\\:\\(Lorg\\/apache\\/tools\\/zip\\/ZipOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Zip\\.createEmptyZip\\:\\(Ljava\\/io\\/File\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Zip\\.getResourcesToAdd\\:\\(\\[Lorg\\/apache\\/tools\\/ant\\/types\\/ResourceCollection\\;Ljava\\/io\\/File\\;Z\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Zip\\$ArchiveState\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Zip\\.getResourcesToAdd\\:\\(\\[Lorg\\/apache\\/tools\\/ant\\/types\\/FileSet\\;Ljava\\/io\\/File\\;Z\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Zip\\$ArchiveState\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Zip\\.getNonFileSetResourcesToAdd\\:\\(\\[Lorg\\/apache\\/tools\\/ant\\/types\\/ResourceCollection\\;Ljava\\/io\\/File\\;Z\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/Zip\\$ArchiveState\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Zip\\.zipDir\\:\\(Ljava\\/io\\/File\\;Lorg\\/apache\\/tools\\/zip\\/ZipOutputStream\\;Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Zip\\.zipDir\\:\\(Ljava\\/io\\/File\\;Lorg\\/apache\\/tools\\/zip\\/ZipOutputStream\\;Ljava\\/lang\\/String\\;I\\[Lorg\\/apache\\/tools\\/zip\\/ZipExtraField\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Zip\\.zipDir\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Lorg\\/apache\\/tools\\/zip\\/ZipOutputStream\\;Ljava\\/lang\\/String\\;I\\[Lorg\\/apache\\/tools\\/zip\\/ZipExtraField\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Zip\\.zipFile\\:\\(Ljava\\/io\\/InputStream\\;Lorg\\/apache\\/tools\\/zip\\/ZipOutputStream\\;Ljava\\/lang\\/String\\;JLjava\\/io\\/File\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Zip\\.zipFile\\:\\(Ljava\\/io\\/InputStream\\;Lorg\\/apache\\/tools\\/zip\\/ZipOutputStream\\;Ljava\\/lang\\/String\\;JLjava\\/io\\/File\\;I\\[Lorg\\/apache\\/tools\\/zip\\/ZipExtraField\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Zip\\.zipFile\\:\\(Ljava\\/io\\/File\\;Lorg\\/apache\\/tools\\/zip\\/ZipOutputStream\\;Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.Zip\\.addParentDirs\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/zip\\/ZipOutputStream\\;Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.compilers\\.AptCompilerAdapter\\.execute\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.compilers\\.AptExternalCompilerAdapter\\.execute\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.compilers\\.CompilerAdapter\\.execute\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.compilers\\.CompilerAdapterFactory\\.getCompiler\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/Task\\;\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/compilers\\/CompilerAdapter\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.compilers\\.CompilerAdapterFactory\\.getCompiler\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/Task\\;Lorg\\/apache\\/tools\\/ant\\/types\\/Path\\;\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/compilers\\/CompilerAdapter\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.compilers\\.CompilerAdapterFactory\\.resolveClassName\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/compilers\\/CompilerAdapter\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.compilers\\.Gcj\\.execute\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.compilers\\.Javac12\\.execute\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.compilers\\.Javac13\\.execute\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.compilers\\.JavacExternal\\.execute\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.compilers\\.Jikes\\.execute\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.compilers\\.Jvc\\.execute\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.compilers\\.Kjc\\.execute\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.compilers\\.Sj\\.execute\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.And\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.AntVersion\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.AntVersion\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.AntVersion\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.Condition\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.Contains\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.Equals\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.FilesMatch\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.HasFreeSpace\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.HasFreeSpace\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.HasMethod\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.Http\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.IsFalse\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.IsLastModified\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.IsLastModified\\.getMillis\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.IsLastModified\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.IsReachable\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.IsReference\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.IsSet\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.IsSigned\\.isSigned\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.IsTrue\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.Matches\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.Not\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.Or\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.Os\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.ParserSupports\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.ResourceContains\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.ResourceExists\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.ResourceExists\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.ResourcesMatch\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.Socket\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.TypeFound\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.condition\\.Xor\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.cvslib\\.ChangeLogTask\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.cvslib\\.ChangeLogTask\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.cvslib\\.ChangeLogTask\\.loadUserlist\\:\\(Ljava\\/util\\/Properties\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.cvslib\\.ChangeLogTask\\.writeChangeLog\\:\\(\\[Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/cvslib\\/CVSEntry\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.cvslib\\.ChangeLogWriter\\.printEntry\\:\\(Lorg\\/w3c\\/dom\\/Document\\;Ljava\\/io\\/PrintWriter\\;Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/cvslib\\/CVSEntry\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.cvslib\\.CvsTagDiff\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.cvslib\\.CvsTagDiff\\.parseRDiff\\:\\(Ljava\\/io\\/File\\;\\)\\[Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/cvslib\\/CvsTagEntry\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.cvslib\\.CvsTagDiff\\.writeTagDiff\\:\\(\\[Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/cvslib\\/CvsTagEntry\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.cvslib\\.CvsTagDiff\\.writeTagEntry\\:\\(Lorg\\/w3c\\/dom\\/Document\\;Ljava\\/io\\/PrintWriter\\;Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/cvslib\\/CvsTagEntry\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.cvslib\\.CvsTagDiff\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.cvslib\\.CvsUser\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.email\\.EmailTask\\.addMessage\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/email\\/Message\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.email\\.Mailer\\.send\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.email\\.Message\\.print\\:\\(Ljava\\/io\\/PrintStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.email\\.Message\\.getReader\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.email\\.PlainMailer\\.attach\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/PrintStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.email\\.UUMailer\\.attach\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/PrintStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.launcher\\.CommandLauncher\\.exec\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Process\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.launcher\\.CommandLauncher\\.exec\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Ljava\\/io\\/File\\;\\)Ljava\\/lang\\/Process\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.launcher\\.CommandLauncherProxy\\.exec\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Process\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.launcher\\.Java13CommandLauncher\\.exec\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Ljava\\/io\\/File\\;\\)Ljava\\/lang\\/Process\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.launcher\\.MacCommandLauncher\\.exec\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Ljava\\/io\\/File\\;\\)Ljava\\/lang\\/Process\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.launcher\\.OS2CommandLauncher\\.exec\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Ljava\\/io\\/File\\;\\)Ljava\\/lang\\/Process\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.launcher\\.PerlScriptCommandLauncher\\.exec\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Ljava\\/io\\/File\\;\\)Ljava\\/lang\\/Process\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.launcher\\.ScriptCommandLauncher\\.exec\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Ljava\\/io\\/File\\;\\)Ljava\\/lang\\/Process\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.launcher\\.VmsCommandLauncher\\.exec\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Process\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.launcher\\.VmsCommandLauncher\\.exec\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Ljava\\/io\\/File\\;\\)Ljava\\/lang\\/Process\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.launcher\\.VmsCommandLauncher\\.createCommandFile\\:\\(\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.launcher\\.WinNTCommandLauncher\\.exec\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Ljava\\/io\\/File\\;\\)Ljava\\/lang\\/Process\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.Cab\\.checkConfiguration\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.Cab\\.createExec\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/ExecTask\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.Cab\\.createListFile\\:\\(Ljava\\/util\\/Vector\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.Cab\\.getFileList\\:\\(\\)Ljava\\/util\\/Vector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.Cab\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.EchoProperties\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.EchoProperties\\.saveProperties\\:\\(Ljava\\/util\\/Hashtable\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.EchoProperties\\.xmlSaveProperties\\:\\(Ljava\\/util\\/Properties\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.EchoProperties\\.jdkSaveProperties\\:\\(Ljava\\/util\\/Properties\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.Javah\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.Native2Ascii\\.createMapper\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/types\\/Mapper\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.Native2Ascii\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.Native2Ascii\\.convert\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.PropertyFile\\$Entry\\.executeOn\\:\\(Ljava\\/util\\/Properties\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.PropertyFile\\$Entry\\.executeDate\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.PropertyFile\\$Entry\\.executeInteger\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.PropertyFile\\$Entry\\.executeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.PropertyFile\\$Entry\\.checkParameters\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.PropertyFile\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.PropertyFile\\.executeOperation\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.PropertyFile\\.readFile\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.PropertyFile\\.checkParameters\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.PropertyFile\\.writeFile\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.RenameExtensions\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ReplaceRegExp\\.doReplace\\:\\(Ljava\\/io\\/File\\;I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ReplaceRegExp\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ReplaceRegExp\\.multilineReplace\\:\\(Ljava\\/io\\/Reader\\;Ljava\\/io\\/Writer\\;I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ReplaceRegExp\\.replaceAndWrite\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/Writer\\;I\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.Rpm\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.SchemaValidate\\$SchemaLocation\\.getURIandLocation\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.SchemaValidate\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.Script\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.TraXLiaison\\.\\<init\\>\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.TraXLiaison\\.setStylesheet\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.TraXLiaison\\.setStylesheet\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.TraXLiaison\\.transform\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.parsers.ParserConfigurationException", 
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.TraXLiaison\\.getSource\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/File\\;\\)Ljavax\\/xml\\/transform\\/Source\\;"
 }, 
 {
  "exceptions": [
   "javax.xml.parsers.ParserConfigurationException", 
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.TraXLiaison\\.getSource\\:\\(Ljava\\/io\\/InputStream\\;Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;\\)Ljavax\\/xml\\/transform\\/Source\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.xml.transform.TransformerConfigurationException", 
   "javax.xml.parsers.ParserConfigurationException", 
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.TraXLiaison\\.readTemplates\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.TraXLiaison\\.createTransformer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.TraXLiaison\\.getFactory\\:\\(\\)Ljavax\\/xml\\/transform\\/TransformerFactory\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.XMLValidateTask\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.XMLValidateTask\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.XMLValidateTask\\.setFeature\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.XMLValidateTask\\.setProperty\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ccm\\.CCMCheck\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ccm\\.CCMCreateTask\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ccm\\.CCMCreateTask\\.start\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ccm\\.CCMCreateTask\\.setProcessInputStream\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ccm\\.CCMCreateTask\\.setProcessErrorStream\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ccm\\.CCMCreateTask\\.setProcessOutputStream\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ccm\\.CCMReconfigure\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.clearcase\\.CCCheckin\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.clearcase\\.CCCheckout\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.clearcase\\.CCLock\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.clearcase\\.CCMkattr\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.clearcase\\.CCMkbl\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.clearcase\\.CCMkdir\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.clearcase\\.CCMkelem\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.clearcase\\.CCMklabel\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.clearcase\\.CCMklbtype\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.clearcase\\.CCRmtype\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.clearcase\\.CCUnCheckout\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.clearcase\\.CCUnlock\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.clearcase\\.CCUpdate\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassFormatError"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.depend\\.ClassFile\\.read\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.depend\\.Depend\\.readCachedDependencies\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/util\\/Hashtable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.depend\\.Depend\\.writeCachedDependencies\\:\\(Ljava\\/util\\/Hashtable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.depend\\.Depend\\.determineDependencies\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.depend\\.Depend\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.depend\\.DirectoryIterator\\.\\<init\\>\\:\\(Ljava\\/io\\/File\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.depend\\.JarFileIterator\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.depend\\.constantpool\\.ClassCPInfo\\.read\\:\\(Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.depend\\.constantpool\\.ConstantPool\\.read\\:\\(Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.depend\\.constantpool\\.ConstantPoolEntry\\.readEntry\\:\\(Ljava\\/io\\/DataInputStream\\;\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/depend\\/constantpool\\/ConstantPoolEntry\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.depend\\.constantpool\\.ConstantPoolEntry\\.read\\:\\(Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.depend\\.constantpool\\.DoubleCPInfo\\.read\\:\\(Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.depend\\.constantpool\\.FieldRefCPInfo\\.read\\:\\(Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.depend\\.constantpool\\.FloatCPInfo\\.read\\:\\(Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.depend\\.constantpool\\.IntegerCPInfo\\.read\\:\\(Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.depend\\.constantpool\\.InterfaceMethodRefCPInfo\\.read\\:\\(Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.depend\\.constantpool\\.InvokeDynamicCPInfo\\.read\\:\\(Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.depend\\.constantpool\\.LongCPInfo\\.read\\:\\(Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.depend\\.constantpool\\.MethodHandleCPInfo\\.read\\:\\(Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.depend\\.constantpool\\.MethodRefCPInfo\\.read\\:\\(Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.depend\\.constantpool\\.MethodTypeCPInfo\\.read\\:\\(Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.depend\\.constantpool\\.NameAndTypeCPInfo\\.read\\:\\(Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.depend\\.constantpool\\.StringCPInfo\\.read\\:\\(Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.depend\\.constantpool\\.Utf8CPInfo\\.read\\:\\(Ljava\\/io\\/DataInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.BorlandDeploymentTool\\.writeJar\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/File\\;Ljava\\/util\\/Hashtable\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.BorlandDeploymentTool\\.start\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.BorlandDeploymentTool\\.setProcessInputStream\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.BorlandDeploymentTool\\.setProcessOutputStream\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.BorlandDeploymentTool\\.setProcessErrorStream\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.BorlandGenerateClient\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.BorlandGenerateClient\\.executeJava\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.BorlandGenerateClient\\.executeFork\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.BorlandGenerateClient\\.executeForkV4\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.BorlandGenerateClient\\.executeForkV5\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.DescriptorHandler\\.resolveEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/xml\\/sax\\/InputSource\\;"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.DescriptorHandler\\.startDocument\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.DescriptorHandler\\.startElement\\:\\(Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/AttributeList\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.DescriptorHandler\\.endElement\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.DescriptorHandler\\.characters\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.EJBDeploymentTool\\.processDescriptor\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/xml\\/parsers\\/SAXParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.EJBDeploymentTool\\.validateConfigured\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.EjbJar\\.validateConfig\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.EjbJar\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.GenericDeploymentTool\\.addFileToJar\\:\\(Ljava\\/util\\/jar\\/JarOutputStream\\;Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.GenericDeploymentTool\\.checkConfiguration\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/xml\\/parsers\\/SAXParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.GenericDeploymentTool\\.parseEjbFiles\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/xml\\/parsers\\/SAXParser\\;\\)Ljava\\/util\\/Hashtable\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.GenericDeploymentTool\\.writeJar\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/File\\;Ljava\\/util\\/Hashtable\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.GenericDeploymentTool\\.checkAndAddDependants\\:\\(Ljava\\/util\\/Hashtable\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.GenericDeploymentTool\\.validateConfigured\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.IPlanetDeploymentTool\\.checkConfiguration\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/xml\\/parsers\\/SAXParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.IPlanetDeploymentTool\\.parseEjbFiles\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/xml\\/parsers\\/SAXParser\\;\\)Ljava\\/util\\/Hashtable\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc$EjbcException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.IPlanetEjbc\\$EjbInfo\\.checkConfiguration\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc$EjbcException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.IPlanetEjbc\\$EjbInfo\\.access\\$000\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/ejb\\/IPlanetEjbc\\$EjbInfo\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.IPlanetEjbc\\$EjbcHandler\\.resolveEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/xml\\/sax\\/InputSource\\;"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.IPlanetEjbc\\$EjbcHandler\\.startElement\\:\\(Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/AttributeList\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.IPlanetEjbc\\$EjbcHandler\\.characters\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.IPlanetEjbc\\$EjbcHandler\\.endElement\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc$EjbcException", 
   "java.io.IOException", 
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.IPlanetEjbc\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc$EjbcException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.IPlanetEjbc\\.checkConfiguration\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.IPlanetEjbc\\.getEjbs\\:\\(\\)\\[Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/ejb\\/IPlanetEjbc\\$EjbInfo\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.IPlanetEjbcTask\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.IPlanetEjbcTask\\.checkConfiguration\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.IPlanetEjbcTask\\.getParser\\:\\(\\)Ljavax\\/xml\\/parsers\\/SAXParser\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.IPlanetEjbcTask\\.executeEjbc\\:\\(Ljavax\\/xml\\/parsers\\/SAXParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.JbossDeploymentTool\\.validateConfigured\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.JonasDeploymentTool\\.writeJar\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/File\\;Ljava\\/util\\/Hashtable\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.JonasDeploymentTool\\.checkConfiguration\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/xml\\/parsers\\/SAXParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.JonasDeploymentTool\\.createTempDir\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.WeblogicDeploymentTool\\.writeJar\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/File\\;Ljava\\/util\\/Hashtable\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.WeblogicDeploymentTool\\.validateConfigured\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.WeblogicDeploymentTool\\.getClassLoaderFromJar\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/lang\\/ClassLoader\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.WeblogicTOPLinkDeploymentTool\\.validateConfigured\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.WebsphereDeploymentTool\\.writeJar\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/File\\;Ljava\\/util\\/Hashtable\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.WebsphereDeploymentTool\\.validateConfigured\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.ejb\\.WebsphereDeploymentTool\\.getClassLoaderFromJar\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/lang\\/ClassLoader\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.DeweyDecimal\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.ExtensionAdapter\\.setRefid\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Reference\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.ExtensionAdapter\\.verifyNotAReference\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.ExtensionAdapter\\.toExtension\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/extension\\/Extension\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.ExtensionResolver\\.resolve\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/extension\\/Extension\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.ExtensionSet\\.toExtensions\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)\\[Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/extension\\/Extension\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.ExtensionSet\\.setRefid\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Reference\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.ExtensionSet\\.dieOnCircularReference\\:\\(Ljava\\/util\\/Stack\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.ExtensionUtil\\.toExtensions\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/ArrayList\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.ExtensionUtil\\.extractExtensions\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/util\\/List\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.ExtensionUtil\\.getExtensions\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;Ljava\\/util\\/List\\;\\)\\[Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/extension\\/Extension\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.ExtensionUtil\\.loadExtensions\\:\\(Ljava\\/io\\/File\\;Ljava\\/util\\/List\\;ZZ\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.ExtensionUtil\\.getManifest\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/util\\/jar\\/Manifest\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.ExtraAttribute\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.JarLibAvailableTask\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.JarLibAvailableTask\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.JarLibDisplayTask\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.JarLibDisplayTask\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.JarLibManifestTask\\.addConfiguredExtension\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/extension\\/ExtensionAdapter\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.JarLibManifestTask\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.JarLibManifestTask\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.JarLibManifestTask\\.writeManifest\\:\\(Ljava\\/util\\/jar\\/Manifest\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.JarLibManifestTask\\.appendLibraryList\\:\\(Ljava\\/util\\/jar\\/Attributes\\;Ljava\\/lang\\/String\\;Ljava\\/util\\/ArrayList\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.JarLibManifestTask\\.toExtensions\\:\\(Ljava\\/util\\/ArrayList\\;\\)Ljava\\/util\\/ArrayList\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.JarLibResolveTask\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.JarLibResolveTask\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.LibraryDisplayer\\.displayLibrary\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.LibraryDisplayer\\.displayLibrary\\:\\(Ljava\\/io\\/File\\;Ljava\\/util\\/jar\\/Manifest\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.LibraryDisplayer\\.getSpecifications\\:\\(Ljava\\/util\\/jar\\/Manifest\\;\\)\\[Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/extension\\/Specification\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.Specification\\.getSpecifications\\:\\(Ljava\\/util\\/jar\\/Manifest\\;\\)\\[Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/extension\\/Specification\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.Specification\\.getSpecification\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/jar\\/Attributes\\;\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/extension\\/Specification\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.resolvers\\.AntResolver\\.resolve\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/extension\\/Extension\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.resolvers\\.LocationResolver\\.resolve\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/extension\\/Extension\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.extension\\.resolvers\\.URLResolver\\.resolve\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/extension\\/Extension\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.i18n\\.Translate\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.i18n\\.Translate\\.loadResourceMaps\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.i18n\\.Translate\\.processBundle\\:\\(Ljava\\/lang\\/String\\;IZ\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.i18n\\.Translate\\.loadResourceMap\\:\\(Ljava\\/io\\/FileInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.i18n\\.Translate\\.translate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.i18n\\.Translate\\.translateOneFile\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.j2ee\\.AbstractHotDeploymentTool\\.validateAttributes\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.j2ee\\.AbstractHotDeploymentTool\\.deploy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.j2ee\\.GenericHotDeploymentTool\\.deploy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.j2ee\\.GenericHotDeploymentTool\\.validateAttributes\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.j2ee\\.HotDeploymentTool\\.validateAttributes\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.j2ee\\.HotDeploymentTool\\.deploy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.j2ee\\.JonasHotDeploymentTool\\.validateAttributes\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.j2ee\\.ServerDeploy\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.j2ee\\.WebLogicHotDeploymentTool\\.validateAttributes\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.j2ee\\.WebLogicHotDeploymentTool\\.getArguments\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.javacc\\.JJDoc\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.javacc\\.JJTree\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.javacc\\.JJTree\\.validateOutputFile\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.javacc\\.JavaCC\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.javacc\\.JavaCC\\.getArchiveFile\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.javacc\\.JavaCC\\.getMainClass\\:\\(Ljava\\/io\\/File\\;I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.javacc\\.JavaCC\\.getMainClass\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Path\\;I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.javacc\\.JavaCC\\.getArchiveLocationIndex\\:\\(Ljava\\/io\\/File\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.javacc\\.JavaCC\\.getMajorVersionNumber\\:\\(Ljava\\/io\\/File\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.javah\\.Gcjh\\.compile\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/Javah\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.javah\\.JavahAdapter\\.compile\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/Javah\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.javah\\.JavahAdapterFactory\\.getAdapter\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/ProjectComponent\\;\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/javah\\/JavahAdapter\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.javah\\.JavahAdapterFactory\\.getAdapter\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/ProjectComponent\\;Lorg\\/apache\\/tools\\/ant\\/types\\/Path\\;\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/javah\\/JavahAdapter\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.javah\\.JavahAdapterFactory\\.resolveClassName\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/javah\\/JavahAdapter\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.javah\\.Kaffeh\\.compile\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/Javah\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.javah\\.SunJavah\\.compile\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/Javah\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.jlink\\.ClassNameReader\\.getClassName\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.jlink\\.ConstantPool\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.jlink\\.JlinkTask\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.jlink\\.jlink\\.link\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.jlink\\.jlink\\.mergeZipJarContents\\:\\(Ljava\\/util\\/zip\\/ZipOutputStream\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.jlink\\.jlink\\.addDirContents\\:\\(Ljava\\/util\\/zip\\/ZipOutputStream\\;Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.jlink\\.jlink\\.addFile\\:\\(Ljava\\/util\\/zip\\/ZipOutputStream\\;Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.jlink\\.jlink\\.addToOutputStream\\:\\(Ljava\\/util\\/zip\\/ZipOutputStream\\;Ljava\\/io\\/InputStream\\;Ljava\\/util\\/zip\\/ZipEntry\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.jlink\\.jlink\\.calcChecksum\\:\\(Ljava\\/io\\/File\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.jlink\\.jlink\\.calcChecksum\\:\\(Ljava\\/io\\/InputStream\\;\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.jsp\\.JspC\\.addWebApp\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/jsp\\/JspC\\$WebAppParameter\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.jsp\\.JspC\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.jsp\\.JspC\\.doCompilation\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/jsp\\/compilers\\/JspCompilerAdapter\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.jsp\\.WLJspc\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.jsp\\.compilers\\.JasperC\\.execute\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.jsp\\.compilers\\.JspCompilerAdapter\\.execute\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.jsp\\.compilers\\.JspCompilerAdapterFactory\\.getCompiler\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/Task\\;\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/jsp\\/compilers\\/JspCompilerAdapter\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.jsp\\.compilers\\.JspCompilerAdapterFactory\\.getCompiler\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/Task\\;Lorg\\/apache\\/tools\\/ant\\/AntClassLoader\\;\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/jsp\\/compilers\\/JspCompilerAdapter\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.jsp\\.compilers\\.JspCompilerAdapterFactory\\.resolveClassName\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/AntClassLoader\\;\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/jsp\\/compilers\\/JspCompilerAdapter\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.native2ascii\\.DefaultNative2Ascii\\.convert\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/Native2Ascii\\;Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.native2ascii\\.DefaultNative2Ascii\\.setup\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Commandline\\;Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/Native2Ascii\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.native2ascii\\.DefaultNative2Ascii\\.addFiles\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Commandline\\;Lorg\\/apache\\/tools\\/ant\\/ProjectComponent\\;Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.native2ascii\\.DefaultNative2Ascii\\.run\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Commandline\\;Lorg\\/apache\\/tools\\/ant\\/ProjectComponent\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.native2ascii\\.KaffeNative2Ascii\\.setup\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Commandline\\;Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/Native2Ascii\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.native2ascii\\.KaffeNative2Ascii\\.run\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Commandline\\;Lorg\\/apache\\/tools\\/ant\\/ProjectComponent\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.native2ascii\\.Native2AsciiAdapter\\.convert\\:\\(Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/Native2Ascii\\;Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.native2ascii\\.Native2AsciiAdapterFactory\\.getAdapter\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/ProjectComponent\\;\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/native2ascii\\/Native2AsciiAdapter\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.native2ascii\\.Native2AsciiAdapterFactory\\.getAdapter\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/ProjectComponent\\;Lorg\\/apache\\/tools\\/ant\\/types\\/Path\\;\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/native2ascii\\/Native2AsciiAdapter\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.native2ascii\\.Native2AsciiAdapterFactory\\.resolveClassName\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/native2ascii\\/Native2AsciiAdapter\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.native2ascii\\.SunNative2Ascii\\.setup\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Commandline\\;Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/optional\\/Native2Ascii\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.native2ascii\\.SunNative2Ascii\\.run\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Commandline\\;Lorg\\/apache\\/tools\\/ant\\/ProjectComponent\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.net\\.MimeMail\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.net\\.SetProxy\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.pvcs\\.Pvcs\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.pvcs\\.Pvcs\\.createFolders\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.pvcs\\.Pvcs\\.massagePCLI\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.sos\\.SOS\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.taskdefs.optional.testing.BuildTimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.testing\\.BlockFor\\.processTimeout\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.testing\\.Funtest\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.unix\\.Symlink\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.unix\\.Symlink\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.unix\\.Symlink\\.single\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.unix\\.Symlink\\.delete\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.unix\\.Symlink\\.recreate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.unix\\.Symlink\\.record\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.io.FileNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.unix\\.Symlink\\.deleteSymlink\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.unix\\.Symlink\\.deleteSymlink\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.unix\\.Symlink\\.writePropertyFile\\:\\(Ljava\\/util\\/Properties\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.unix\\.Symlink\\.doLink\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.vss\\.MSVSS\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.vss\\.MSVSS\\.getVersionDate\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.optional\\.vss\\.MSVSS\\.calcDate\\:\\(Ljava\\/lang\\/String\\;I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.rmic\\.ForkingSunRmic\\.execute\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.rmic\\.KaffeRmic\\.execute\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.rmic\\.RmicAdapter\\.execute\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.rmic\\.RmicAdapterFactory\\.getRmic\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/Task\\;\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/rmic\\/RmicAdapter\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.rmic\\.RmicAdapterFactory\\.getRmic\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/Task\\;Lorg\\/apache\\/tools\\/ant\\/types\\/Path\\;\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/rmic\\/RmicAdapter\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.rmic\\.RmicAdapterFactory\\.resolveClassName\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Lorg\\/apache\\/tools\\/ant\\/taskdefs\\/rmic\\/RmicAdapter\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.rmic\\.SunRmic\\.execute\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.taskdefs\\.rmic\\.WLRmic\\.execute\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.AbstractFileSet\\.setRefid\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Reference\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.AbstractFileSet\\.setDir\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.AbstractFileSet\\.setIncludesfile\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.AbstractFileSet\\.setExcludesfile\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.AbstractFileSet\\.dieOnCircularReference\\:\\(Ljava\\/util\\/Stack\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.AntFilterReader\\.setRefid\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Reference\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.AntFilterReader\\.dieOnCircularReference\\:\\(Ljava\\/util\\/Stack\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.ArchiveFileSet\\.setDir\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.ArchiveFileSet\\.dieOnCircularReference\\:\\(Ljava\\/util\\/Stack\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.Assertions\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.CommandlineJava\\$SysProperties\\.getVariables\\:\\(\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.CommandlineJava\\$SysProperties\\.setSystem\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.CommandlineJava\\$SysProperties\\.restoreSystem\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.CommandlineJava\\$SysProperties\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.CommandlineJava\\.setSystemProperties\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.CommandlineJava\\.restoreSystemProperties\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.CommandlineJava\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.DataType\\.dieOnCircularReference\\:\\(Ljava\\/util\\/Stack\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.DataType\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.EnumeratedAttribute\\.getInstance\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/tools\\/ant\\/types\\/EnumeratedAttribute\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.EnumeratedAttribute\\.setValue\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.Environment\\$Variable\\.getContent\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.Environment\\.getVariables\\:\\(\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.FileList\\.setRefid\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Reference\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.FileList\\.setDir\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.FilterChain\\.setRefid\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Reference\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.FilterChain\\.dieOnCircularReference\\:\\(Ljava\\/util\\/Stack\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.FilterSet\\.setFiltersfile\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.FilterSet\\.readFiltersFromFile\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.FilterSet\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.FilterSet\\.replaceTokens\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.Mapper\\.setRefid\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Reference\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.Mapper\\.getImplementation\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/util\\/FileNameMapper\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.Mapper\\.getImplementationClass\\:\\(\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.Path\\.setLocation\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.Path\\.setPath\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.Path\\.setRefid\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Reference\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.Path\\.createPathElement\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/types\\/Path\\$PathElement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.Path\\.addFileset\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/FileSet\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.Path\\.addFilelist\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/FileList\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.Path\\.addDirset\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/DirSet\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.Path\\.add\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Path\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.Path\\.createPath\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/types\\/Path\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.Path\\.dieOnCircularReference\\:\\(Ljava\\/util\\/Stack\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.PatternSet\\.setRefid\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Reference\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.PatternSet\\.setIncludesfile\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.PatternSet\\.setExcludesfile\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.PatternSet\\.readPatterns\\:\\(Ljava\\/io\\/File\\;Ljava\\/util\\/List\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.Permissions\\.setSecurityManager\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.Permissions\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.PropertySet\\.dieOnCircularReference\\:\\(Ljava\\/util\\/Stack\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.RedirectorElement\\.setRefid\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Reference\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.RedirectorElement\\.dieOnCircularReference\\:\\(Ljava\\/util\\/Stack\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.Reference\\.getReferencedObject\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.Reference\\.getReferencedObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.Resource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.Resource\\.getOutputStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.TarFileSet\\.setRefid\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Reference\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.transform.TransformerException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.XMLCatalog\\$CatalogResolver\\.resolve\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljavax\\/xml\\/transform\\/Source\\;"
 }, 
 {
  "exceptions": [
   "javax.xml.transform.TransformerException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.XMLCatalog\\$ExternalResolver\\.resolve\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljavax\\/xml\\/transform\\/Source\\;"
 }, 
 {
  "exceptions": [
   "javax.xml.transform.TransformerException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.XMLCatalog\\$InternalResolver\\.resolve\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljavax\\/xml\\/transform\\/Source\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.XMLCatalog\\.addDTD\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/ResourceLocation\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.XMLCatalog\\.addEntity\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/ResourceLocation\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.XMLCatalog\\.setRefid\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Reference\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.XMLCatalog\\.resolveEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/xml\\/sax\\/InputSource\\;"
 }, 
 {
  "exceptions": [
   "javax.xml.transform.TransformerException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.XMLCatalog\\.resolve\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljavax\\/xml\\/transform\\/Source\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.XMLCatalog\\.dieOnCircularReference\\:\\(Ljava\\/util\\/Stack\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.transform.TransformerException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.XMLCatalog\\.setEntityResolver\\:\\(Ljavax\\/xml\\/transform\\/sax\\/SAXSource\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.optional\\.ScriptCondition\\.eval\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.optional\\.ScriptFilter\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.optional\\.ScriptSelector\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.optional\\.depend\\.DependScanner\\.scan\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.AbstractClasspathResource\\$1\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.AbstractClasspathResource\\$1\\.finalize\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.AbstractClasspathResource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.AbstractClasspathResource\\.openInputStream\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.AbstractResourceCollectionWrapper\\.add\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/ResourceCollection\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.AbstractResourceCollectionWrapper\\.dieOnCircularReference\\:\\(Ljava\\/util\\/Stack\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.Appendable\\.getAppendOutputStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.ArchiveResource\\.checkEntry\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.Archives\\.dieOnCircularReference\\:\\(Ljava\\/util\\/Stack\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.BZip2Resource\\.wrapStream\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.BZip2Resource\\.wrapStream\\:\\(Ljava\\/io\\/OutputStream\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.BaseResourceCollectionContainer\\.clear\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.BaseResourceCollectionContainer\\.add\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/ResourceCollection\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.BaseResourceCollectionContainer\\.addAll\\:\\(Ljava\\/util\\/Collection\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.BaseResourceCollectionContainer\\.dieOnCircularReference\\:\\(Ljava\\/util\\/Stack\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.ContentTransformingResource\\$1\\.getAppendOutputStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.ContentTransformingResource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.ContentTransformingResource\\.getOutputStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.ContentTransformingResource\\.wrapStream\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.ContentTransformingResource\\.wrapStream\\:\\(Ljava\\/io\\/OutputStream\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.FileResource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.FileResource\\.getOutputStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.FileResource\\.getAppendOutputStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.FileResource\\.getOutputStream\\:\\(Z\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.Files\\.setRefid\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Reference\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.Files\\.setIncludesfile\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.Files\\.setExcludesfile\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.GZipResource\\.wrapStream\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.GZipResource\\.wrapStream\\:\\(Ljava\\/io\\/OutputStream\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.JavaConstantResource\\.openInputStream\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.JavaResource\\.openInputStream\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.LogOutputResource\\.getAppendOutputStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.LogOutputResource\\.getOutputStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.MappedResourceCollection\\.add\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/ResourceCollection\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.MappedResourceCollection\\.createMapper\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/types\\/Mapper\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.MappedResourceCollection\\.dieOnCircularReference\\:\\(Ljava\\/util\\/Stack\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.PropertyResource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.PropertyResource\\.getOutputStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.ResourceDecorator\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.ResourceDecorator\\.getOutputStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.ResourceDecorator\\.dieOnCircularReference\\:\\(Ljava\\/util\\/Stack\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.ResourceDecorator\\.setName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.ResourceDecorator\\.setLastModified\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.ResourceDecorator\\.setDirectory\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.ResourceDecorator\\.setSize\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.ResourceList\\.setRefid\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Reference\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.ResourceList\\.dieOnCircularReference\\:\\(Ljava\\/util\\/Stack\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.Resources\\.dieOnCircularReference\\:\\(Ljava\\/util\\/Stack\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.Sort\\.dieOnCircularReference\\:\\(Ljava\\/util\\/Stack\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.StringResource\\$StringResourceFilterOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.StringResource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.StringResource\\.getOutputStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.TarResource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.TarResource\\.getOutputStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.Tokens\\.dieOnCircularReference\\:\\(Ljava\\/util\\/Stack\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.URLResource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.URLResource\\.getOutputStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.URLResource\\.connect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.URLResource\\.connect\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.ZipResource\\$1\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.ZipResource\\$1\\.finalize\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.ZipResource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.ZipResource\\.getOutputStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.comparators\\.DelegatedResourceComparator\\.dieOnCircularReference\\:\\(Ljava\\/util\\/Stack\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.comparators\\.Reverse\\.dieOnCircularReference\\:\\(Ljava\\/util\\/Stack\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.selectors\\.Compare\\.dieOnCircularReference\\:\\(Ljava\\/util\\/Stack\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.resources\\.selectors\\.ResourceSelectorContainer\\.dieOnCircularReference\\:\\(Ljava\\/util\\/Stack\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.selectors\\.BaseExtendSelector\\.isSelected\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;Ljava\\/io\\/File\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.selectors\\.BaseSelectorContainer\\.dieOnCircularReference\\:\\(Ljava\\/util\\/Stack\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.selectors\\.ExtendSelector\\.isSelected\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;Ljava\\/io\\/File\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.selectors\\.FileSelector\\.isSelected\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;Ljava\\/io\\/File\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.selectors\\.MappingSelector\\.createMapper\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/types\\/Mapper\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.selectors\\.PresentSelector\\.createMapper\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/types\\/Mapper\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.types\\.spi\\.Service\\.getAsStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.CollectionUtils\\$CompoundEnumeration\\.nextElement\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.CollectionUtils\\$EmptyEnumeration\\.nextElement\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ConcatFileInputStream\\.\\<init\\>\\:\\(\\[Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ConcatFileInputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ConcatFileInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ConcatFileInputStream\\.readCurrent\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ConcatFileInputStream\\.openFile\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ConcatResourceInputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ConcatResourceInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ConcatResourceInputStream\\.readCurrent\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ConcatResourceInputStream\\.nextResource\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.DOMElementWriter\\.write\\:\\(Lorg\\/w3c\\/dom\\/Element\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.DOMElementWriter\\.writeXMLDeclaration\\:\\(Ljava\\/io\\/Writer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.DOMElementWriter\\.write\\:\\(Lorg\\/w3c\\/dom\\/Element\\;Ljava\\/io\\/Writer\\;ILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.DOMElementWriter\\.openElement\\:\\(Lorg\\/w3c\\/dom\\/Element\\;Ljava\\/io\\/Writer\\;ILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.DOMElementWriter\\.openElement\\:\\(Lorg\\/w3c\\/dom\\/Element\\;Ljava\\/io\\/Writer\\;ILjava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.DOMElementWriter\\.closeElement\\:\\(Lorg\\/w3c\\/dom\\/Element\\;Ljava\\/io\\/Writer\\;ILjava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.DOMElementWriter\\.encodedata\\:\\(Ljava\\/io\\/Writer\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.DateUtils\\.parseDateFromHeader\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.DateUtils\\.parseIso8601DateTime\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.DateUtils\\.parseIso8601Date\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.DateUtils\\.parseIso8601DateTimeOrDate\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.DeweyDecimal\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileTokenizer\\.getToken\\:\\(Ljava\\/io\\/Reader\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.getFileURL\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.copyFile\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.copyFile\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/types\\/FilterSetCollection\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.copyFile\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/types\\/FilterSetCollection\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.copyFile\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/types\\/FilterSetCollection\\;ZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.copyFile\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/types\\/FilterSetCollection\\;ZZLjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.copyFile\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/types\\/FilterSetCollection\\;Ljava\\/util\\/Vector\\;ZZLjava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.copyFile\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/types\\/FilterSetCollection\\;Ljava\\/util\\/Vector\\;ZZLjava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.copyFile\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.copyFile\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;Lorg\\/apache\\/tools\\/ant\\/types\\/FilterSetCollection\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.copyFile\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;Lorg\\/apache\\/tools\\/ant\\/types\\/FilterSetCollection\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.copyFile\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;Lorg\\/apache\\/tools\\/ant\\/types\\/FilterSetCollection\\;ZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.copyFile\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;Lorg\\/apache\\/tools\\/ant\\/types\\/FilterSetCollection\\;ZZLjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.copyFile\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;Lorg\\/apache\\/tools\\/ant\\/types\\/FilterSetCollection\\;Ljava\\/util\\/Vector\\;ZZLjava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.copyFile\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;Lorg\\/apache\\/tools\\/ant\\/types\\/FilterSetCollection\\;Ljava\\/util\\/Vector\\;ZZLjava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.copyFile\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;Lorg\\/apache\\/tools\\/ant\\/types\\/FilterSetCollection\\;Ljava\\/util\\/Vector\\;ZZZLjava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.copyFile\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;Lorg\\/apache\\/tools\\/ant\\/types\\/FilterSetCollection\\;Ljava\\/util\\/Vector\\;ZZZLjava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.contentEquals\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.contentEquals\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.readFully\\:\\(Ljava\\/io\\/Reader\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.readFully\\:\\(Ljava\\/io\\/Reader\\;I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.safeReadFully\\:\\(Ljava\\/io\\/Reader\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.createNewFile\\:\\(Ljava\\/io\\/File\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.createNewFile\\:\\(Ljava\\/io\\/File\\;Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.isSymbolicLink\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.areSame\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.rename\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.FileUtils\\.getRelativePath\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.JAXPUtils\\.getParserFactory\\:\\(\\)Ljavax\\/xml\\/parsers\\/SAXParserFactory\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.JAXPUtils\\.getNSParserFactory\\:\\(\\)Ljavax\\/xml\\/parsers\\/SAXParserFactory\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.JAXPUtils\\.newParserFactory\\:\\(\\)Ljavax\\/xml\\/parsers\\/SAXParserFactory\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.JAXPUtils\\.getParser\\:\\(\\)Lorg\\/xml\\/sax\\/Parser\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.JAXPUtils\\.getXMLReader\\:\\(\\)Lorg\\/xml\\/sax\\/XMLReader\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.JAXPUtils\\.getNamespaceXMLReader\\:\\(\\)Lorg\\/xml\\/sax\\/XMLReader\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.JAXPUtils\\.getDocumentBuilder\\:\\(\\)Ljavax\\/xml\\/parsers\\/DocumentBuilder\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.JAXPUtils\\.newSAXParser\\:\\(Ljavax\\/xml\\/parsers\\/SAXParserFactory\\;\\)Ljavax\\/xml\\/parsers\\/SAXParser\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.JAXPUtils\\.getDocumentBuilderFactory\\:\\(\\)Ljavax\\/xml\\/parsers\\/DocumentBuilderFactory\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.JavaEnvUtils\\.checkForJava9\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.JavaEnvUtils\\.createVmsJavaOptionFile\\:\\(\\[Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.KeepAliveInputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.KeepAliveOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LayoutPreservingProperties\\.load\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NullPointerException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LayoutPreservingProperties\\.put\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NullPointerException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LayoutPreservingProperties\\.setProperty\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LayoutPreservingProperties\\.saveAs\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LayoutPreservingProperties\\.store\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LayoutPreservingProperties\\.readLines\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LayoutPreservingProperties\\.readFirstLine\\:\\(Ljava\\/io\\/PushbackReader\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LazyFileOutputStream\\.open\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LazyFileOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LazyFileOutputStream\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LazyFileOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LazyFileOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LazyFileOutputStream\\.ensureOpened\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LeadPipeInputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/PipedOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LeadPipeInputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/PipedOutputStream\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LeadPipeInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LineOrientedOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LineOrientedOutputStream\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LineOrientedOutputStream\\.processBuffer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LineOrientedOutputStream\\.processLine\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LineOrientedOutputStream\\.processLine\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LineOrientedOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LineOrientedOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LineOrientedOutputStreamRedirector\\.processLine\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LineOrientedOutputStreamRedirector\\.processLine\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LineOrientedOutputStreamRedirector\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LineOrientedOutputStreamRedirector\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.LineTokenizer\\.getToken\\:\\(Ljava\\/io\\/Reader\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.OutputStreamFunneler\\$Funnel\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.OutputStreamFunneler\\$Funnel\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.OutputStreamFunneler\\$Funnel\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.OutputStreamFunneler\\$Funnel\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.OutputStreamFunneler\\$Funnel\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.OutputStreamFunneler\\.getFunnelInstance\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.OutputStreamFunneler\\.release\\:\\(Lorg\\/apache\\/tools\\/ant\\/util\\/OutputStreamFunneler\\$Funnel\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.OutputStreamFunneler\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.OutputStreamFunneler\\.dieIfClosed\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.OutputStreamFunneler\\.access\\$100\\:\\(Lorg\\/apache\\/tools\\/ant\\/util\\/OutputStreamFunneler\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.OutputStreamFunneler\\.access\\$300\\:\\(Lorg\\/apache\\/tools\\/ant\\/util\\/OutputStreamFunneler\\;Lorg\\/apache\\/tools\\/ant\\/util\\/OutputStreamFunneler\\$Funnel\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ReaderInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ReaderInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ReaderInputStream\\.available\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ReaderInputStream\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ReaderInputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ReflectUtil\\.getField\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ReflectUtil\\.throwBuildException\\:\\(Ljava\\/lang\\/Exception\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ReflectUtil\\.respondsTo\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.RegexpPatternMapper\\.\\<init\\>\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.RegexpPatternMapper\\.setFrom\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ResourceUtils\\.copyResource\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ResourceUtils\\.copyResource\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ResourceUtils\\.copyResource\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Lorg\\/apache\\/tools\\/ant\\/types\\/FilterSetCollection\\;Ljava\\/util\\/Vector\\;ZZLjava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ResourceUtils\\.copyResource\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Lorg\\/apache\\/tools\\/ant\\/types\\/FilterSetCollection\\;Ljava\\/util\\/Vector\\;ZZZLjava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ResourceUtils\\.copyResource\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Lorg\\/apache\\/tools\\/ant\\/types\\/FilterSetCollection\\;Ljava\\/util\\/Vector\\;ZZZLjava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ResourceUtils\\.contentEquals\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ResourceUtils\\.compareContent\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Z\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ResourceUtils\\.binaryCompare\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ResourceUtils\\.textCompare\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ResourceUtils\\.copyWithFilterSets\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Lorg\\/apache\\/tools\\/ant\\/types\\/FilterSetCollection\\;Ljava\\/util\\/Vector\\;ZZLjava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ResourceUtils\\.copyWithFilterChainsOrTranscoding\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Ljava\\/util\\/Vector\\;ZZLjava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ResourceUtils\\.copyUsingFileChannels\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ResourceUtils\\.copyUsingStreams\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;ZLorg\\/apache\\/tools\\/ant\\/Project\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.ResourceUtils\\.getOutputStream\\:\\(Lorg\\/apache\\/tools\\/ant\\/types\\/Resource\\;ZLorg\\/apache\\/tools\\/ant\\/Project\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.RetryHandler\\.execute\\:\\(Lorg\\/apache\\/tools\\/ant\\/util\\/Retryable\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.Retryable\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.SplitClassLoader\\.loadClass\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.StringTokenizer\\.getToken\\:\\(Ljava\\/io\\/Reader\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.StringUtils\\.parseHumanSizes\\:\\(Ljava\\/lang\\/String\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.SymbolicLinkUtils\\.isSymbolicLink\\:\\(Ljava\\/io\\/File\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.SymbolicLinkUtils\\.isSymbolicLink\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.SymbolicLinkUtils\\.isSymbolicLink\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.SymbolicLinkUtils\\.isDanglingSymbolicLink\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.SymbolicLinkUtils\\.isDanglingSymbolicLink\\:\\(Ljava\\/io\\/File\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.SymbolicLinkUtils\\.isDanglingSymbolicLink\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.SymbolicLinkUtils\\.deleteSymbolicLink\\:\\(Ljava\\/io\\/File\\;Lorg\\/apache\\/tools\\/ant\\/Task\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.TeeOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.TeeOutputStream\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.TeeOutputStream\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.TeeOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.TeeOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.Tokenizer\\.getToken\\:\\(Ljava\\/io\\/Reader\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.UUEncoder\\.encode\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.UUEncoder\\.encodeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.UUEncoder\\.encodeBegin\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.UUEncoder\\.encodeEnd\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.UUEncoder\\.encodeLine\\:\\(\\[BIILjava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.WorkerAnt\\.waitUntilFinished\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.depend\\.AbstractAnalyzer\\.getClassContainer\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.depend\\.AbstractAnalyzer\\.getSourceContainer\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.depend\\.AbstractAnalyzer\\.getResourceContainer\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.depend\\.DependencyAnalyzer\\.getClassContainer\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.depend\\.DependencyAnalyzer\\.getSourceContainer\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.optional\\.JavaxScriptRunner\\.executeScript\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.optional\\.JavaxScriptRunner\\.evaluateScript\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.optional\\.JavaxScriptRunner\\.createEngine\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/util\\/ReflectWrapper\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.regexp\\.Jdk14RegexpMatcher\\.getCompiledPattern\\:\\(I\\)Ljava\\/util\\/regex\\/Pattern\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.regexp\\.Jdk14RegexpMatcher\\.matches\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.regexp\\.Jdk14RegexpMatcher\\.matches\\:\\(Ljava\\/lang\\/String\\;I\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.regexp\\.Jdk14RegexpMatcher\\.getGroups\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Vector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.regexp\\.Jdk14RegexpMatcher\\.getGroups\\:\\(Ljava\\/lang\\/String\\;I\\)Ljava\\/util\\/Vector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.regexp\\.Jdk14RegexpRegexp\\.substitute\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.regexp\\.Regexp\\.substitute\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.regexp\\.RegexpFactory\\.newRegexp\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/util\\/regexp\\/Regexp\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.regexp\\.RegexpFactory\\.newRegexp\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)Lorg\\/apache\\/tools\\/ant\\/util\\/regexp\\/Regexp\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.regexp\\.RegexpFactory\\.createRegexpInstance\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/tools\\/ant\\/util\\/regexp\\/Regexp\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.regexp\\.RegexpMatcher\\.setPattern\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.regexp\\.RegexpMatcher\\.getPattern\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.regexp\\.RegexpMatcher\\.matches\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.regexp\\.RegexpMatcher\\.getGroups\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Vector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.regexp\\.RegexpMatcher\\.matches\\:\\(Ljava\\/lang\\/String\\;I\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.regexp\\.RegexpMatcher\\.getGroups\\:\\(Ljava\\/lang\\/String\\;I\\)Ljava\\/util\\/Vector\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.regexp\\.RegexpMatcherFactory\\.newRegexpMatcher\\:\\(\\)Lorg\\/apache\\/tools\\/ant\\/util\\/regexp\\/RegexpMatcher\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.regexp\\.RegexpMatcherFactory\\.newRegexpMatcher\\:\\(Lorg\\/apache\\/tools\\/ant\\/Project\\;\\)Lorg\\/apache\\/tools\\/ant\\/util\\/regexp\\/RegexpMatcher\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.regexp\\.RegexpMatcherFactory\\.createInstance\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/tools\\/ant\\/util\\/regexp\\/RegexpMatcher\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.util\\.regexp\\.RegexpMatcherFactory\\.testAvailability\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.read0\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.init\\:\\(Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.initBlock\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.endBlock\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.complete\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.bsR\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.bsGetBit\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.bsGetUByte\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.bsGetInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.recvDecodingTables\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.getAndMoveToFrontDecode\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.getAndMoveToFrontDecode0\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.setupBlock\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.setupRandPartA\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.setupNoRandPartA\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.setupRandPartB\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.setupRandPartC\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.setupNoRandPartB\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.setupNoRandPartC\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2InputStream\\.reportCRCError\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2OutputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2OutputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/OutputStream\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2OutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2OutputStream\\.writeRun\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2OutputStream\\.finalize\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2OutputStream\\.finish\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2OutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2OutputStream\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2OutputStream\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2OutputStream\\.endBlock\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2OutputStream\\.endCompression\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2OutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2OutputStream\\.write0\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2OutputStream\\.bsFinishedWithStream\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2OutputStream\\.bsW\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2OutputStream\\.bsPutUByte\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2OutputStream\\.bsPutInt\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2OutputStream\\.sendMTFValues\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2OutputStream\\.sendMTFValues4\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2OutputStream\\.sendMTFValues5\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2OutputStream\\.sendMTFValues6\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2OutputStream\\.sendMTFValues7\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.bzip2\\.CBZip2OutputStream\\.moveToFrontCodeAndSend\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.mail\\.MailMessage\\.\\<init\\>\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.mail\\.MailMessage\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.mail\\.MailMessage\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.mail\\.MailMessage\\.from\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.mail\\.MailMessage\\.to\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.mail\\.MailMessage\\.cc\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.mail\\.MailMessage\\.bcc\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.mail\\.MailMessage\\.getPrintStream\\:\\(\\)Ljava\\/io\\/PrintStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.mail\\.MailMessage\\.flushHeaders\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.mail\\.MailMessage\\.sendAndClose\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.mail\\.MailMessage\\.connect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.mail\\.MailMessage\\.getReady\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.mail\\.MailMessage\\.sendHelo\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.mail\\.MailMessage\\.sendFrom\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.mail\\.MailMessage\\.sendRcpt\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.mail\\.MailMessage\\.sendData\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.mail\\.MailMessage\\.sendDot\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.mail\\.MailMessage\\.sendQuit\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.mail\\.MailMessage\\.send\\:\\(Ljava\\/lang\\/String\\;\\[I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.mail\\.MailMessage\\.disconnect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.mail\\.SmtpResponseReader\\.getResponse\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.mail\\.SmtpResponseReader\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarArchiveSparseEntry\\.\\<init\\>\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarBuffer\\.skipRecord\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarBuffer\\.readRecord\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarBuffer\\.readBlock\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarBuffer\\.writeRecord\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarBuffer\\.writeRecord\\:\\(\\[BI\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarBuffer\\.writeBlock\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarBuffer\\.flushBlock\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarBuffer\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarEntry\\.\\<init\\>\\:\\(\\[BLorg\\/apache\\/tools\\/zip\\/ZipEncoding\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarEntry\\.writeEntryHeader\\:\\(\\[BLorg\\/apache\\/tools\\/zip\\/ZipEncoding\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarEntry\\.parseTarHeader\\:\\(\\[BLorg\\/apache\\/tools\\/zip\\/ZipEncoding\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarEntry\\.parseTarHeader\\:\\(\\[BLorg\\/apache\\/tools\\/zip\\/ZipEncoding\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarInputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarInputStream\\.available\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarInputStream\\.skip\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarInputStream\\.getNextEntry\\:\\(\\)Lorg\\/apache\\/tools\\/tar\\/TarEntry\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarInputStream\\.getLongNameData\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarInputStream\\.getRecord\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarInputStream\\.paxHeaders\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarInputStream\\.parsePaxHeaders\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarInputStream\\.readGNUSparse\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarInputStream\\.copyEntryContents\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarOutputStream\\.finish\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarOutputStream\\.putNextEntry\\:\\(Lorg\\/apache\\/tools\\/tar\\/TarEntry\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarOutputStream\\.closeEntry\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarOutputStream\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarOutputStream\\.writePaxHeaders\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarOutputStream\\.writeEOFRecord\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarOutputStream\\.handleLongName\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;Ljava\\/lang\\/String\\;BLjava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarUtils\\.parseName\\:\\(\\[BIILorg\\/apache\\/tools\\/zip\\/ZipEncoding\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.tar\\.TarUtils\\.formatNameBytes\\:\\(Ljava\\/lang\\/String\\;\\[BIILorg\\/apache\\/tools\\/zip\\/ZipEncoding\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.util.zip.ZipException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.AbstractUnicodeExtraField\\.parseFromLocalFileData\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.util.zip.ZipException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.AsiExtraField\\.parseFromLocalFileData\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.util.zip.ZipException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.CentralDirectoryParsingZipExtraField\\.parseFromCentralDirectoryData\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InstantiationException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ExtraFieldUtils\\.createExtraField\\:\\(Lorg\\/apache\\/tools\\/zip\\/ZipShort\\;\\)Lorg\\/apache\\/tools\\/zip\\/ZipExtraField\\;"
 }, 
 {
  "exceptions": [
   "java.util.zip.ZipException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ExtraFieldUtils\\.parse\\:\\(\\[B\\)\\[Lorg\\/apache\\/tools\\/zip\\/ZipExtraField\\;"
 }, 
 {
  "exceptions": [
   "java.util.zip.ZipException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ExtraFieldUtils\\.parse\\:\\(\\[BZ\\)\\[Lorg\\/apache\\/tools\\/zip\\/ZipExtraField\\;"
 }, 
 {
  "exceptions": [
   "java.util.zip.ZipException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ExtraFieldUtils\\.parse\\:\\(\\[BZLorg\\/apache\\/tools\\/zip\\/ExtraFieldUtils\\$UnparseableExtraField\\;\\)\\[Lorg\\/apache\\/tools\\/zip\\/ZipExtraField\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.FallbackZipEncoding\\.encode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/nio\\/ByteBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.FallbackZipEncoding\\.decode\\:\\(\\[B\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.util.zip.ZipException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.JarMarker\\.parseFromLocalFileData\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.NioZipEncoding\\.decode\\:\\(\\[B\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.Simple8BitZipEncoding\\.decode\\:\\(\\[B\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.util.zip.ZipException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.Zip64ExtendedInformationExtraField\\.parseFromLocalFileData\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.util.zip.ZipException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.Zip64ExtendedInformationExtraField\\.parseFromCentralDirectoryData\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.util.zip.ZipException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.Zip64ExtendedInformationExtraField\\.reparseCentralDirectoryData\\:\\(ZZZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipEncoding\\.encode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/nio\\/ByteBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipEncoding\\.decode\\:\\(\\[B\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.util.zip.ZipException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipEntry\\.\\<init\\>\\:\\(Ljava\\/util\\/zip\\/ZipEntry\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.zip.ZipException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipEntry\\.\\<init\\>\\:\\(Lorg\\/apache\\/tools\\/zip\\/ZipEntry\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.RuntimeException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipEntry\\.setExtra\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.util.zip.ZipException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipEntry\\.mergeExtraFields\\:\\(\\[Lorg\\/apache\\/tools\\/zip\\/ZipExtraField\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.util.zip.ZipException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipExtraField\\.parseFromLocalFileData\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipFile\\$1\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipFile\\$BoundedInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipFile\\$BoundedInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipFile\\.\\<init\\>\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipFile\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipFile\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipFile\\.\\<init\\>\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipFile\\.\\<init\\>\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipFile\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.util.zip.ZipException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipFile\\.getInputStream\\:\\(Lorg\\/apache\\/tools\\/zip\\/ZipEntry\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipFile\\.finalize\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipFile\\.populateFromCentralDirectory\\:\\(\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipFile\\.readCentralDirectoryEntry\\:\\(Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipFile\\.setSizesAndOffsetFromZip64Extra\\:\\(Lorg\\/apache\\/tools\\/zip\\/ZipEntry\\;Lorg\\/apache\\/tools\\/zip\\/ZipFile\\$OffsetEntry\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipFile\\.positionAtCentralDirectory\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipFile\\.positionAtCentralDirectory64\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipFile\\.positionAtCentralDirectory32\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipFile\\.positionAtEndOfCentralDirectoryRecord\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipFile\\.tryToLocateSignature\\:\\(JJ\\[B\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipFile\\.skipBytes\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipFile\\.resolveLocalFileHeaderData\\:\\(Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipFile\\.startsWithLocalFileHeader\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.finish\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.closeEntry\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.flushDeflater\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.util.zip.ZipException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.handleSizesAndCrc\\:\\(JJLorg\\/apache\\/tools\\/zip\\/Zip64Mode\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.rewriteSizesAndCrc\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.putNextEntry\\:\\(Lorg\\/apache\\/tools\\/zip\\/ZipEntry\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.zip.ZipException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.validateSizeInformation\\:\\(Lorg\\/apache\\/tools\\/zip\\/Zip64Mode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.writeDeflated\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.deflate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.writeLocalFileHeader\\:\\(Lorg\\/apache\\/tools\\/zip\\/ZipEntry\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.addUnicodeExtraFields\\:\\(Lorg\\/apache\\/tools\\/zip\\/ZipEntry\\;ZLjava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.writeDataDescriptor\\:\\(Lorg\\/apache\\/tools\\/zip\\/ZipEntry\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.writeCentralFileHeader\\:\\(Lorg\\/apache\\/tools\\/zip\\/ZipEntry\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.writeCentralDirectoryEnd\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.util.zip.ZipException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.getBytes\\:\\(Ljava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.writeZip64CentralDirectory\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.writeOut\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.writeOut\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.deflateUntilInputIsNeeded\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.writeVersionNeededToExtractAndGeneralPurposeBits\\:\\(IZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.getName\\:\\(Lorg\\/apache\\/tools\\/zip\\/ZipEntry\\;\\)Ljava\\/nio\\/ByteBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipOutputStream\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.zip.UnsupportedZipFeatureException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.zip\\.ZipUtil\\.checkRequestedFeatures\\:\\(Lorg\\/apache\\/tools\\/zip\\/ZipEntry\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.launch\\.Launcher\\.addPath\\:\\(Ljava\\/lang\\/String\\;ZLjava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.launch.LaunchException", 
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.launch\\.Launcher\\.run\\:\\(\\[Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.launch\\.Launcher\\.getLibPathURLs\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/List\\;\\)\\[Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.launch\\.Launcher\\.getSystemURLs\\:\\(Ljava\\/io\\/File\\;\\)\\[Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.launch\\.Launcher\\.getUserURLs\\:\\(\\)\\[Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.launch\\.Launcher\\.getJarArray\\:\\(\\[Ljava\\/net\\/URL\\;\\[Ljava\\/net\\/URL\\;\\[Ljava\\/net\\/URL\\;Ljava\\/io\\/File\\;\\)\\[Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.launch\\.Locator\\.decodeUri\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.launch\\.Locator\\.encodeURI\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.launch\\.Locator\\.fileToURL\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.launch\\.Locator\\.getLocationURLs\\:\\(Ljava\\/io\\/File\\;\\)\\[Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.apache\\.tools\\.ant\\.launch\\.Locator\\.getLocationURLs\\:\\(Ljava\\/io\\/File\\;\\[Ljava\\/lang\\/String\\;\\)\\[Ljava\\/net\\/URL\\;"
 }
]